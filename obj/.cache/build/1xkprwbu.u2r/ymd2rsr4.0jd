<!DOCTYPE html>
<!--[if IE]><![endif]-->
<html>
  
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
    <title>Class ClonesManager
   </title>
    <meta name="viewport" content="width=device-width">
    <meta name="title" content="Class ClonesManager
   ">
    <meta name="generator" content="docfx 2.58.0.0">
    
    <link rel="shortcut icon" href="../favicon.ico">
    <link rel="stylesheet" href="../styles/docfx.vendor.css">
    <link rel="stylesheet" href="../styles/docfx.css">
    <link rel="stylesheet" href="../styles/main.css">
    <meta property="docfx:navrel" content="../toc.html">
    <meta property="docfx:tocrel" content="../References/toc.html">
    
    
    
  </head>
  <body data-spy="scroll" data-target="#affix" data-offset="120">
    <div id="wrapper">
      <header>
        
        <nav id="autocollapse" class="navbar navbar-inverse ng-scope" role="navigation">
          <div class="container">
            <div class="navbar-header">
              <button type="button" class="navbar-toggle" data-toggle="collapse" data-target="#navbar">
                <span class="sr-only">Toggle navigation</span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
                <span class="icon-bar"></span>
              </button>
              
              <a class="navbar-brand" href="../index.html">
                <img id="logo" class="svg" src="../logo.svg" alt="">
              </a>
            </div>
            <div class="collapse navbar-collapse" id="navbar">
              <form class="navbar-form navbar-right" role="search" id="search">
                <div class="form-group">
                  <input type="text" class="form-control" id="search-query" placeholder="Search" autocomplete="off">
                </div>
              </form>
            </div>
          </div>
        </nav>
        
        <div class="subnav navbar navbar-default">
          <div class="container hide-when-search" id="breadcrumb">
            <ul class="breadcrumb">
              <li></li>
            </ul>
          </div>
        </div>
      </header>
      <div role="main" class="container body-content hide-when-search">
        
        <div class="sidenav hide-when-search">
          <a class="btn toc-toggle collapse" data-toggle="collapse" href="#sidetoggle" aria-expanded="false" aria-controls="sidetoggle">Show / Hide Table of Contents</a>
          <div class="sidetoggle collapse" id="sidetoggle">
            <div id="sidetoc"></div>
          </div>
        </div>
        <div class="article row grid-right">
          <div class="col-md-10">
            <article class="content wrap" id="_content" data-uid="ParrelSync.ClonesManager">
  
  
  <h1 id="ParrelSync_ClonesManager" data-uid="ParrelSync.ClonesManager" class="text-break">Class ClonesManager
  </h1>
  <div class="markdown level0 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Contains all required methods for creating a linked clone of the Unity project.</p>
</div>
  <div class="markdown level0 conceptual"></div>
  <div class="inheritance">
    <h5>Inheritance</h5>
    <div class="level0"><span class="xref">System.Object</span></div>
    <div class="level1"><span class="xref">ClonesManager</span></div>
  </div>
  <div class="inheritedMembers">
    <h5>Inherited Members</h5>
    <div>
      <span class="xref">System.Object.ToString()</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.Equals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.ReferenceEquals(System.Object, System.Object)</span>
    </div>
    <div>
      <span class="xref">System.Object.GetHashCode()</span>
    </div>
    <div>
      <span class="xref">System.Object.GetType()</span>
    </div>
    <div>
      <span class="xref">System.Object.MemberwiseClone()</span>
    </div>
  </div>
  <h6><strong>Namespace</strong>: <a class="xref" href="ParrelSync.html">ParrelSync</a></h6>
  <h6><strong>Assembly</strong>: cs.temp.dll.dll</h6>
  <h5 id="ParrelSync_ClonesManager_syntax">Syntax</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public class ClonesManager</code></pre>
  </div>
  <h3 id="fields">Fields
  </h3>
  
  
  <h4 id="ParrelSync_ClonesManager_ArgumentFileName" data-uid="ParrelSync.ClonesManager.ArgumentFileName">ArgumentFileName</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Name of the file for storing clone's argument.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string ArgumentFileName = &quot;.parrelsyncarg&quot;</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="ParrelSync_ClonesManager_CloneFileName" data-uid="ParrelSync.ClonesManager.CloneFileName">CloneFileName</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Name used for an identifying file created in the clone project directory.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string CloneFileName = &quot;.clone&quot;</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="ParrelSync_ClonesManager_CloneFileName_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">(!) Do not change this after the clone was created, because then connection will be lost.</p>
</div>
  
  
  <h4 id="ParrelSync_ClonesManager_CloneNameSuffix" data-uid="ParrelSync.ClonesManager.CloneNameSuffix">CloneNameSuffix</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Suffix added to the end of the project clone name when it is created.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string CloneNameSuffix = &quot;_clone&quot;</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 id="ParrelSync_ClonesManager_CloneNameSuffix_remarks">Remarks</h5>
  <div class="markdown level1 remarks"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">(!) Do not change this after the clone was created, because then connection will be lost.</p>
</div>
  
  
  <h4 id="ParrelSync_ClonesManager_DefaultArgument" data-uid="ParrelSync.ClonesManager.DefaultArgument">DefaultArgument</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Default argument of the new clone</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string DefaultArgument = &quot;client&quot;</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="ParrelSync_ClonesManager_MaxCloneProjectCount" data-uid="ParrelSync.ClonesManager.MaxCloneProjectCount">MaxCloneProjectCount</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">The maximum number of clones</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const int MaxCloneProjectCount = 10</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Int32</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <h4 id="ParrelSync_ClonesManager_ProjectName" data-uid="ParrelSync.ClonesManager.ProjectName">ProjectName</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public const string ProjectName = &quot;ParrelSync&quot;</code></pre>
  </div>
  <h5 class="fieldValue">Field Value</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h3 id="methods">Methods
  </h3>
  
  
  <a id="ParrelSync_ClonesManager_CopyDirectoryWithProgressBar_" data-uid="ParrelSync.ClonesManager.CopyDirectoryWithProgressBar*"></a>
  <h4 id="ParrelSync_ClonesManager_CopyDirectoryWithProgressBar_System_String_System_String_System_String_" data-uid="ParrelSync.ClonesManager.CopyDirectoryWithProgressBar(System.String,System.String,System.String)">CopyDirectoryWithProgressBar(String, String, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Copies directory located at sourcePath to destinationPath. Displays a progress bar.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void CopyDirectoryWithProgressBar(string sourcePath, string destinationPath, string progressBarPrefix = &quot;&quot;)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">sourcePath</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">destinationPath</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">progressBarPrefix</span></td>
        <td><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="1">Optional string added to the beginning of the progress bar window header.</p>
</td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_CopyLibraryFolder_" data-uid="ParrelSync.ClonesManager.CopyLibraryFolder*"></a>
  <h4 id="ParrelSync_ClonesManager_CopyLibraryFolder_ParrelSync_Project_ParrelSync_Project_" data-uid="ParrelSync.ClonesManager.CopyLibraryFolder(ParrelSync.Project,ParrelSync.Project)">CopyLibraryFolder(Project, Project)</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Copies the full contents of the unity library. We want to do this to avoid the lengthy re-serialization of the whole project when it opens up the clone.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">[Obsolete]
public static void CopyLibraryFolder(Project sourceProject, Project destinationProject)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="ParrelSync.Project.html">Project</a></td>
        <td><span class="parametername">sourceProject</span></td>
        <td></td>
      </tr>
      <tr>
        <td><a class="xref" href="ParrelSync.Project.html">Project</a></td>
        <td><span class="parametername">destinationProject</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_CreateCloneFromCurrent_" data-uid="ParrelSync.ClonesManager.CreateCloneFromCurrent*"></a>
  <h4 id="ParrelSync_ClonesManager_CreateCloneFromCurrent" data-uid="ParrelSync.ClonesManager.CreateCloneFromCurrent">CreateCloneFromCurrent()</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Creates clone from the project currently open in Unity Editor.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Project CreateCloneFromCurrent()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="ParrelSync.Project.html">Project</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_CreateCloneFromPath_" data-uid="ParrelSync.ClonesManager.CreateCloneFromPath*"></a>
  <h4 id="ParrelSync_ClonesManager_CreateCloneFromPath_System_String_" data-uid="ParrelSync.ClonesManager.CreateCloneFromPath(System.String)">CreateCloneFromPath(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Creates clone of the project located at the given path.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Project CreateCloneFromPath(string sourceProjectPath)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">sourceProjectPath</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="ParrelSync.Project.html">Project</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_CreateProjectFolder_" data-uid="ParrelSync.ClonesManager.CreateProjectFolder*"></a>
  <h4 id="ParrelSync_ClonesManager_CreateProjectFolder_ParrelSync_Project_" data-uid="ParrelSync.ClonesManager.CreateProjectFolder(ParrelSync.Project)">CreateProjectFolder(Project)</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Creates an empty folder using data in the given Project object</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void CreateProjectFolder(Project project)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="ParrelSync.Project.html">Project</a></td>
        <td><span class="parametername">project</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_DeleteClone_" data-uid="ParrelSync.ClonesManager.DeleteClone*"></a>
  <h4 id="ParrelSync_ClonesManager_DeleteClone_System_String_" data-uid="ParrelSync.ClonesManager.DeleteClone(System.String)">DeleteClone(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Deletes the clone of the currently open project, if such exists.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void DeleteClone(string cloneProjectPath)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">cloneProjectPath</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_GetArgument_" data-uid="ParrelSync.ClonesManager.GetArgument*"></a>
  <h4 id="ParrelSync_ClonesManager_GetArgument" data-uid="ParrelSync.ClonesManager.GetArgument">GetArgument()</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Get the argument of this clone project.
If this is the original project, will return an empty string.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetArgument()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_GetCloneProjectsPath_" data-uid="ParrelSync.ClonesManager.GetCloneProjectsPath*"></a>
  <h4 id="ParrelSync_ClonesManager_GetCloneProjectsPath" data-uid="ParrelSync.ClonesManager.GetCloneProjectsPath">GetCloneProjectsPath()</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Returns all clone projects path.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static List&lt;string&gt; GetCloneProjectsPath()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">List</span>&lt;<span class="xref">System.String</span>&gt;</td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_GetCurrentProject_" data-uid="ParrelSync.ClonesManager.GetCurrentProject*"></a>
  <h4 id="ParrelSync_ClonesManager_GetCurrentProject" data-uid="ParrelSync.ClonesManager.GetCurrentProject">GetCurrentProject()</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Return a project object that describes all the paths we need to clone it.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static Project GetCurrentProject()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><a class="xref" href="ParrelSync.Project.html">Project</a></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_GetCurrentProjectPath_" data-uid="ParrelSync.ClonesManager.GetCurrentProjectPath*"></a>
  <h4 id="ParrelSync_ClonesManager_GetCurrentProjectPath" data-uid="ParrelSync.ClonesManager.GetCurrentProjectPath">GetCurrentProjectPath()</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Get the path to the current unityEditor project folder's info</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetCurrentProjectPath()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_GetOriginalProjectPath_" data-uid="ParrelSync.ClonesManager.GetOriginalProjectPath*"></a>
  <h4 id="ParrelSync_ClonesManager_GetOriginalProjectPath" data-uid="ParrelSync.ClonesManager.GetOriginalProjectPath">GetOriginalProjectPath()</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Returns the path to the original project.
If currently open project is the original, returns its own path.
If the original project folder cannot be found, retuns an empty string.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static string GetOriginalProjectPath()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_IsClone_" data-uid="ParrelSync.ClonesManager.IsClone*"></a>
  <h4 id="ParrelSync_ClonesManager_IsClone" data-uid="ParrelSync.ClonesManager.IsClone">IsClone()</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Returns true if the project currently open in Unity Editor is a clone.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsClone()</code></pre>
  </div>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_IsCloneProjectRunning_" data-uid="ParrelSync.ClonesManager.IsCloneProjectRunning*"></a>
  <h4 id="ParrelSync_ClonesManager_IsCloneProjectRunning_System_String_" data-uid="ParrelSync.ClonesManager.IsCloneProjectRunning(System.String)">IsCloneProjectRunning(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Is this project being opened by an Unity editor?</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static bool IsCloneProjectRunning(string projectPath)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">projectPath</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  <h5 class="returns">Returns</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.Boolean</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_LinkFolders_" data-uid="ParrelSync.ClonesManager.LinkFolders*"></a>
  <h4 id="ParrelSync_ClonesManager_LinkFolders_System_String_System_String_" data-uid="ParrelSync.ClonesManager.LinkFolders(System.String,System.String)">LinkFolders(String, String)</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Create a link / junction from the original project to it's clone.</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void LinkFolders(string sourcePath, string destinationPath)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">sourcePath</span></td>
        <td></td>
      </tr>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">destinationPath</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_OpenProject_" data-uid="ParrelSync.ClonesManager.OpenProject*"></a>
  <h4 id="ParrelSync_ClonesManager_OpenProject_System_String_" data-uid="ParrelSync.ClonesManager.OpenProject(System.String)">OpenProject(String)</h4>
  <div class="markdown level1 summary"><p sourcefile="theInvadersAPI/ParrelSync.ClonesManager.yml" sourcestartlinenumber="2">Opens a project located at the given path (if one exists).</p>
</div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void OpenProject(string projectPath)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">projectPath</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
  
  
  <a id="ParrelSync_ClonesManager_OpenProjectInFileExplorer_" data-uid="ParrelSync.ClonesManager.OpenProjectInFileExplorer*"></a>
  <h4 id="ParrelSync_ClonesManager_OpenProjectInFileExplorer_System_String_" data-uid="ParrelSync.ClonesManager.OpenProjectInFileExplorer(System.String)">OpenProjectInFileExplorer(String)</h4>
  <div class="markdown level1 summary"></div>
  <div class="markdown level1 conceptual"></div>
  <h5 class="decalaration">Declaration</h5>
  <div class="codewrapper">
    <pre><code class="lang-csharp hljs">public static void OpenProjectInFileExplorer(string path)</code></pre>
  </div>
  <h5 class="parameters">Parameters</h5>
  <table class="table table-bordered table-striped table-condensed">
    <thead>
      <tr>
        <th>Type</th>
        <th>Name</th>
        <th>Description</th>
      </tr>
    </thead>
    <tbody>
      <tr>
        <td><span class="xref">System.String</span></td>
        <td><span class="parametername">path</span></td>
        <td></td>
      </tr>
    </tbody>
  </table>
</article>
          </div>
          
          <div class="hidden-sm col-md-2" role="complementary">
            <div class="sideaffix">
              <div class="contribution">
                <ul class="nav">
                </ul>
              </div>
              <nav class="bs-docs-sidebar hidden-print hidden-xs hidden-sm affix" id="affix">
                <h5>In This Article</h5>
                <div></div>
              </nav>
            </div>
          </div>
        </div>
      </div>
      
      <footer>
        <div class="grad-bottom"></div>
        <div class="footer">
          <div class="container">
            <span class="pull-right">
              <a href="#top">Back to top</a>
            </span>
            
            <span>Generated by <strong>DocFX</strong></span>
          </div>
        </div>
      </footer>
    </div>
    
    <script type="text/javascript" src="../styles/docfx.vendor.js"></script>
    <script type="text/javascript" src="../styles/docfx.js"></script>
    <script type="text/javascript" src="../styles/main.js"></script>
  </body>
</html>
