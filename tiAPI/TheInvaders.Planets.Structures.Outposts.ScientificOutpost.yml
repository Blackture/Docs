### YamlMime:ManagedReference
items:
- uid: TheInvaders.Planets.Structures.Outposts.ScientificOutpost
  commentId: T:TheInvaders.Planets.Structures.Outposts.ScientificOutpost
  id: ScientificOutpost
  parent: TheInvaders.Planets.Structures.Outposts
  children:
  - TheInvaders.Planets.Structures.Outposts.ScientificOutpost.#ctor
  langs:
  - csharp
  - vb
  name: ScientificOutpost
  nameWithType: ScientificOutpost
  fullName: TheInvaders.Planets.Structures.Outposts.ScientificOutpost
  type: Class
  source:
    id: ScientificOutpost
    path: ''
    startLine: 2312
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Planets.Structures.Outposts
  syntax:
    content: 'public class ScientificOutpost : Outpost<ScientificOutpost>, IOutpost<ScientificOutpost>'
    content.vb: >-
      Public Class ScientificOutpost
          Inherits Outpost(Of ScientificOutpost)
          Implements IOutpost(Of ScientificOutpost)
  inheritance:
  - System.Object
  - TheInvaders.Planets.Structures.Structure
  - TheInvaders.Planets.Structures.Outposts.Outpost{TheInvaders.Planets.Structures.Outposts.ScientificOutpost}
  implements:
  - TheInvaders.Planets.Structures.Outposts.IOutpost{TheInvaders.Planets.Structures.Outposts.ScientificOutpost}
  inheritedMembers:
  - TheInvaders.Planets.Structures.Outposts.Outpost{TheInvaders.Planets.Structures.Outposts.ScientificOutpost}.GetOutpost
  - TheInvaders.Planets.Structures.Structure.GetStructure``1
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TheInvaders.Planets.Structures.Outposts.ScientificOutpost.#ctor
  commentId: M:TheInvaders.Planets.Structures.Outposts.ScientificOutpost.#ctor
  id: '#ctor'
  parent: TheInvaders.Planets.Structures.Outposts.ScientificOutpost
  langs:
  - csharp
  - vb
  name: ScientificOutpost()
  nameWithType: ScientificOutpost.ScientificOutpost()
  fullName: TheInvaders.Planets.Structures.Outposts.ScientificOutpost.ScientificOutpost()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2314
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Planets.Structures.Outposts
  syntax:
    content: public ScientificOutpost()
    content.vb: Public Sub New
  overload: TheInvaders.Planets.Structures.Outposts.ScientificOutpost.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TheInvaders.Planets.Structures.Outposts
  commentId: N:TheInvaders.Planets.Structures.Outposts
  name: TheInvaders.Planets.Structures.Outposts
  nameWithType: TheInvaders.Planets.Structures.Outposts
  fullName: TheInvaders.Planets.Structures.Outposts
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TheInvaders.Planets.Structures.Structure
  commentId: T:TheInvaders.Planets.Structures.Structure
  parent: TheInvaders.Planets.Structures
  name: Structure
  nameWithType: Structure
  fullName: TheInvaders.Planets.Structures.Structure
- uid: TheInvaders.Planets.Structures.Outposts.Outpost{TheInvaders.Planets.Structures.Outposts.ScientificOutpost}
  commentId: T:TheInvaders.Planets.Structures.Outposts.Outpost{TheInvaders.Planets.Structures.Outposts.ScientificOutpost}
  parent: TheInvaders.Planets.Structures.Outposts
  definition: TheInvaders.Planets.Structures.Outposts.Outpost`1
  name: Outpost<ScientificOutpost>
  nameWithType: Outpost<ScientificOutpost>
  fullName: TheInvaders.Planets.Structures.Outposts.Outpost<TheInvaders.Planets.Structures.Outposts.ScientificOutpost>
  nameWithType.vb: Outpost(Of ScientificOutpost)
  fullName.vb: TheInvaders.Planets.Structures.Outposts.Outpost(Of TheInvaders.Planets.Structures.Outposts.ScientificOutpost)
  name.vb: Outpost(Of ScientificOutpost)
  spec.csharp:
  - uid: TheInvaders.Planets.Structures.Outposts.Outpost`1
    name: Outpost
    nameWithType: Outpost
    fullName: TheInvaders.Planets.Structures.Outposts.Outpost
  - name: <
    nameWithType: <
    fullName: <
  - uid: TheInvaders.Planets.Structures.Outposts.ScientificOutpost
    name: ScientificOutpost
    nameWithType: ScientificOutpost
    fullName: TheInvaders.Planets.Structures.Outposts.ScientificOutpost
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TheInvaders.Planets.Structures.Outposts.Outpost`1
    name: Outpost
    nameWithType: Outpost
    fullName: TheInvaders.Planets.Structures.Outposts.Outpost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TheInvaders.Planets.Structures.Outposts.ScientificOutpost
    name: ScientificOutpost
    nameWithType: ScientificOutpost
    fullName: TheInvaders.Planets.Structures.Outposts.ScientificOutpost
  - name: )
    nameWithType: )
    fullName: )
- uid: TheInvaders.Planets.Structures.Outposts.IOutpost{TheInvaders.Planets.Structures.Outposts.ScientificOutpost}
  commentId: T:TheInvaders.Planets.Structures.Outposts.IOutpost{TheInvaders.Planets.Structures.Outposts.ScientificOutpost}
  parent: TheInvaders.Planets.Structures.Outposts
  definition: TheInvaders.Planets.Structures.Outposts.IOutpost`1
  name: IOutpost<ScientificOutpost>
  nameWithType: IOutpost<ScientificOutpost>
  fullName: TheInvaders.Planets.Structures.Outposts.IOutpost<TheInvaders.Planets.Structures.Outposts.ScientificOutpost>
  nameWithType.vb: IOutpost(Of ScientificOutpost)
  fullName.vb: TheInvaders.Planets.Structures.Outposts.IOutpost(Of TheInvaders.Planets.Structures.Outposts.ScientificOutpost)
  name.vb: IOutpost(Of ScientificOutpost)
  spec.csharp:
  - uid: TheInvaders.Planets.Structures.Outposts.IOutpost`1
    name: IOutpost
    nameWithType: IOutpost
    fullName: TheInvaders.Planets.Structures.Outposts.IOutpost
  - name: <
    nameWithType: <
    fullName: <
  - uid: TheInvaders.Planets.Structures.Outposts.ScientificOutpost
    name: ScientificOutpost
    nameWithType: ScientificOutpost
    fullName: TheInvaders.Planets.Structures.Outposts.ScientificOutpost
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TheInvaders.Planets.Structures.Outposts.IOutpost`1
    name: IOutpost
    nameWithType: IOutpost
    fullName: TheInvaders.Planets.Structures.Outposts.IOutpost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TheInvaders.Planets.Structures.Outposts.ScientificOutpost
    name: ScientificOutpost
    nameWithType: ScientificOutpost
    fullName: TheInvaders.Planets.Structures.Outposts.ScientificOutpost
  - name: )
    nameWithType: )
    fullName: )
- uid: TheInvaders.Planets.Structures.Outposts.Outpost{TheInvaders.Planets.Structures.Outposts.ScientificOutpost}.GetOutpost
  commentId: M:TheInvaders.Planets.Structures.Outposts.Outpost{TheInvaders.Planets.Structures.Outposts.ScientificOutpost}.GetOutpost
  parent: TheInvaders.Planets.Structures.Outposts.Outpost{TheInvaders.Planets.Structures.Outposts.ScientificOutpost}
  definition: TheInvaders.Planets.Structures.Outposts.Outpost`1.GetOutpost
  name: GetOutpost()
  nameWithType: Outpost<ScientificOutpost>.GetOutpost()
  fullName: TheInvaders.Planets.Structures.Outposts.Outpost<TheInvaders.Planets.Structures.Outposts.ScientificOutpost>.GetOutpost()
  nameWithType.vb: Outpost(Of ScientificOutpost).GetOutpost()
  fullName.vb: TheInvaders.Planets.Structures.Outposts.Outpost(Of TheInvaders.Planets.Structures.Outposts.ScientificOutpost).GetOutpost()
  spec.csharp:
  - uid: TheInvaders.Planets.Structures.Outposts.Outpost`1.GetOutpost
    name: GetOutpost
    nameWithType: Outpost<ScientificOutpost>.GetOutpost
    fullName: TheInvaders.Planets.Structures.Outposts.Outpost<TheInvaders.Planets.Structures.Outposts.ScientificOutpost>.GetOutpost
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TheInvaders.Planets.Structures.Outposts.Outpost`1.GetOutpost
    name: GetOutpost
    nameWithType: Outpost(Of ScientificOutpost).GetOutpost
    fullName: TheInvaders.Planets.Structures.Outposts.Outpost(Of TheInvaders.Planets.Structures.Outposts.ScientificOutpost).GetOutpost
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TheInvaders.Planets.Structures.Structure.GetStructure``1
  commentId: M:TheInvaders.Planets.Structures.Structure.GetStructure``1
  parent: TheInvaders.Planets.Structures.Structure
  name: GetStructure<T>()
  nameWithType: Structure.GetStructure<T>()
  fullName: TheInvaders.Planets.Structures.Structure.GetStructure<T>()
  nameWithType.vb: Structure.GetStructure(Of T)()
  fullName.vb: TheInvaders.Planets.Structures.Structure.GetStructure(Of T)()
  name.vb: GetStructure(Of T)()
  spec.csharp:
  - uid: TheInvaders.Planets.Structures.Structure.GetStructure``1
    name: GetStructure<T>
    nameWithType: Structure.GetStructure<T>
    fullName: TheInvaders.Planets.Structures.Structure.GetStructure<T>
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TheInvaders.Planets.Structures.Structure.GetStructure``1
    name: GetStructure(Of T)
    nameWithType: Structure.GetStructure(Of T)
    fullName: TheInvaders.Planets.Structures.Structure.GetStructure(Of T)
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TheInvaders.Planets.Structures
  commentId: N:TheInvaders.Planets.Structures
  name: TheInvaders.Planets.Structures
  nameWithType: TheInvaders.Planets.Structures
  fullName: TheInvaders.Planets.Structures
- uid: TheInvaders.Planets.Structures.Outposts.Outpost`1
  commentId: T:TheInvaders.Planets.Structures.Outposts.Outpost`1
  name: Outpost<T>
  nameWithType: Outpost<T>
  fullName: TheInvaders.Planets.Structures.Outposts.Outpost<T>
  nameWithType.vb: Outpost(Of T)
  fullName.vb: TheInvaders.Planets.Structures.Outposts.Outpost(Of T)
  name.vb: Outpost(Of T)
  spec.csharp:
  - uid: TheInvaders.Planets.Structures.Outposts.Outpost`1
    name: Outpost
    nameWithType: Outpost
    fullName: TheInvaders.Planets.Structures.Outposts.Outpost
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TheInvaders.Planets.Structures.Outposts.Outpost`1
    name: Outpost
    nameWithType: Outpost
    fullName: TheInvaders.Planets.Structures.Outposts.Outpost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TheInvaders.Planets.Structures.Outposts.IOutpost`1
  commentId: T:TheInvaders.Planets.Structures.Outposts.IOutpost`1
  name: IOutpost<T>
  nameWithType: IOutpost<T>
  fullName: TheInvaders.Planets.Structures.Outposts.IOutpost<T>
  nameWithType.vb: IOutpost(Of T)
  fullName.vb: TheInvaders.Planets.Structures.Outposts.IOutpost(Of T)
  name.vb: IOutpost(Of T)
  spec.csharp:
  - uid: TheInvaders.Planets.Structures.Outposts.IOutpost`1
    name: IOutpost
    nameWithType: IOutpost
    fullName: TheInvaders.Planets.Structures.Outposts.IOutpost
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: TheInvaders.Planets.Structures.Outposts.IOutpost`1
    name: IOutpost
    nameWithType: IOutpost
    fullName: TheInvaders.Planets.Structures.Outposts.IOutpost
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: TheInvaders.Planets.Structures.Outposts.Outpost`1.GetOutpost
  commentId: M:TheInvaders.Planets.Structures.Outposts.Outpost`1.GetOutpost
  name: GetOutpost()
  nameWithType: Outpost<T>.GetOutpost()
  fullName: TheInvaders.Planets.Structures.Outposts.Outpost<T>.GetOutpost()
  nameWithType.vb: Outpost(Of T).GetOutpost()
  fullName.vb: TheInvaders.Planets.Structures.Outposts.Outpost(Of T).GetOutpost()
  spec.csharp:
  - uid: TheInvaders.Planets.Structures.Outposts.Outpost`1.GetOutpost
    name: GetOutpost
    nameWithType: Outpost<T>.GetOutpost
    fullName: TheInvaders.Planets.Structures.Outposts.Outpost<T>.GetOutpost
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: TheInvaders.Planets.Structures.Outposts.Outpost`1.GetOutpost
    name: GetOutpost
    nameWithType: Outpost(Of T).GetOutpost
    fullName: TheInvaders.Planets.Structures.Outposts.Outpost(Of T).GetOutpost
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: TheInvaders.Planets.Structures.Outposts.ScientificOutpost.#ctor*
  commentId: Overload:TheInvaders.Planets.Structures.Outposts.ScientificOutpost.#ctor
  name: ScientificOutpost
  nameWithType: ScientificOutpost.ScientificOutpost
  fullName: TheInvaders.Planets.Structures.Outposts.ScientificOutpost.ScientificOutpost
