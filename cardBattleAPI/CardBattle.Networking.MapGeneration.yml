### YamlMime:ManagedReference
items:
- uid: CardBattle.Networking.MapGeneration
  commentId: T:CardBattle.Networking.MapGeneration
  id: MapGeneration
  parent: CardBattle.Networking
  children:
  - CardBattle.Networking.MapGeneration.AllFieldsSlerped
  - CardBattle.Networking.MapGeneration.AxialHexagonalFields
  - CardBattle.Networking.MapGeneration.Finished
  - CardBattle.Networking.MapGeneration.HexagonalFields
  - CardBattle.Networking.MapGeneration.radius
  langs:
  - csharp
  - vb
  name: MapGeneration
  nameWithType: MapGeneration
  fullName: CardBattle.Networking.MapGeneration
  type: Class
  source:
    id: MapGeneration
    path: ''
    startLine: 1871
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Networking
  syntax:
    content: 'public class MapGeneration : MonoBehaviour'
    content.vb: >-
      Public Class MapGeneration
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CardBattle.Networking.MapGeneration.HexagonalFields
  commentId: F:CardBattle.Networking.MapGeneration.HexagonalFields
  id: HexagonalFields
  parent: CardBattle.Networking.MapGeneration
  langs:
  - csharp
  - vb
  name: HexagonalFields
  nameWithType: MapGeneration.HexagonalFields
  fullName: CardBattle.Networking.MapGeneration.HexagonalFields
  type: Field
  source:
    id: HexagonalFields
    path: ''
    startLine: 1877
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Networking
  syntax:
    content: public List<GameObject> HexagonalFields
    return:
      type: System.Collections.Generic.List{GameObject}
    content.vb: Public HexagonalFields As List(Of GameObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CardBattle.Networking.MapGeneration.AxialHexagonalFields
  commentId: F:CardBattle.Networking.MapGeneration.AxialHexagonalFields
  id: AxialHexagonalFields
  parent: CardBattle.Networking.MapGeneration
  langs:
  - csharp
  - vb
  name: AxialHexagonalFields
  nameWithType: MapGeneration.AxialHexagonalFields
  fullName: CardBattle.Networking.MapGeneration.AxialHexagonalFields
  type: Field
  source:
    id: AxialHexagonalFields
    path: ''
    startLine: 1878
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Networking
  syntax:
    content: public Dictionary<Vector2, GameObject> AxialHexagonalFields
    return:
      type: System.Collections.Generic.Dictionary{Vector2,GameObject}
    content.vb: Public AxialHexagonalFields As Dictionary(Of Vector2, GameObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CardBattle.Networking.MapGeneration.Finished
  commentId: F:CardBattle.Networking.MapGeneration.Finished
  id: Finished
  parent: CardBattle.Networking.MapGeneration
  langs:
  - csharp
  - vb
  name: Finished
  nameWithType: MapGeneration.Finished
  fullName: CardBattle.Networking.MapGeneration.Finished
  type: Field
  source:
    id: Finished
    path: ''
    startLine: 1882
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Networking
  syntax:
    content: public bool Finished
    return:
      type: System.Boolean
    content.vb: Public Finished As Boolean
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CardBattle.Networking.MapGeneration.radius
  commentId: F:CardBattle.Networking.MapGeneration.radius
  id: radius
  parent: CardBattle.Networking.MapGeneration
  langs:
  - csharp
  - vb
  name: radius
  nameWithType: MapGeneration.radius
  fullName: CardBattle.Networking.MapGeneration.radius
  type: Field
  source:
    id: radius
    path: ''
    startLine: 1883
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Networking
  syntax:
    content: public int radius
    return:
      type: System.Int32
    content.vb: Public radius As Integer
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CardBattle.Networking.MapGeneration.AllFieldsSlerped
  commentId: M:CardBattle.Networking.MapGeneration.AllFieldsSlerped
  id: AllFieldsSlerped
  parent: CardBattle.Networking.MapGeneration
  langs:
  - csharp
  - vb
  name: AllFieldsSlerped()
  nameWithType: MapGeneration.AllFieldsSlerped()
  fullName: CardBattle.Networking.MapGeneration.AllFieldsSlerped()
  type: Method
  source:
    id: AllFieldsSlerped
    path: ''
    startLine: 2017
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Networking
  syntax:
    content: public bool AllFieldsSlerped()
    return:
      type: System.Boolean
    content.vb: Public Function AllFieldsSlerped As Boolean
  overload: CardBattle.Networking.MapGeneration.AllFieldsSlerped*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: CardBattle.Networking
  commentId: N:CardBattle.Networking
  name: CardBattle.Networking
  nameWithType: CardBattle.Networking
  fullName: CardBattle.Networking
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.Collections.Generic.List{GameObject}
  commentId: T:System.Collections.Generic.List{GameObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<GameObject>
  nameWithType: List<GameObject>
  fullName: System.Collections.Generic.List<GameObject>
  nameWithType.vb: List(Of GameObject)
  fullName.vb: System.Collections.Generic.List(Of GameObject)
  name.vb: List(Of GameObject)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: System.Collections.Generic.Dictionary{Vector2,GameObject}
  commentId: T:System.Collections.Generic.Dictionary{Vector2,GameObject}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.Dictionary`2
  name: Dictionary<Vector2, GameObject>
  nameWithType: Dictionary<Vector2, GameObject>
  fullName: System.Collections.Generic.Dictionary<Vector2, GameObject>
  nameWithType.vb: Dictionary(Of Vector2, GameObject)
  fullName.vb: System.Collections.Generic.Dictionary(Of Vector2, GameObject)
  name.vb: Dictionary(Of Vector2, GameObject)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: Vector2
    name: Vector2
    nameWithType: Vector2
    fullName: Vector2
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: GameObject
    name: GameObject
    nameWithType: GameObject
    fullName: GameObject
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.Dictionary`2
  commentId: T:System.Collections.Generic.Dictionary`2
  isExternal: true
  name: Dictionary<TKey, TValue>
  nameWithType: Dictionary<TKey, TValue>
  fullName: System.Collections.Generic.Dictionary<TKey, TValue>
  nameWithType.vb: Dictionary(Of TKey, TValue)
  fullName.vb: System.Collections.Generic.Dictionary(Of TKey, TValue)
  name.vb: Dictionary(Of TKey, TValue)
  spec.csharp:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.Dictionary`2
    name: Dictionary
    nameWithType: Dictionary
    fullName: System.Collections.Generic.Dictionary
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: TKey
    nameWithType: TKey
    fullName: TKey
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - name: TValue
    nameWithType: TValue
    fullName: TValue
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CardBattle.Networking.MapGeneration.AllFieldsSlerped*
  commentId: Overload:CardBattle.Networking.MapGeneration.AllFieldsSlerped
  name: AllFieldsSlerped
  nameWithType: MapGeneration.AllFieldsSlerped
  fullName: CardBattle.Networking.MapGeneration.AllFieldsSlerped
