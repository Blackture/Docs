### YamlMime:ManagedReference
items:
- uid: CardBattle.Core.Actions.Derived.DiceBox
  commentId: T:CardBattle.Core.Actions.Derived.DiceBox
  id: DiceBox
  parent: CardBattle.Core.Actions.Derived
  children:
  - CardBattle.Core.Actions.Derived.DiceBox.#ctor(System.Int32,System.Boolean)
  - CardBattle.Core.Actions.Derived.DiceBox.Execute
  - CardBattle.Core.Actions.Derived.DiceBox.OnThrow
  langs:
  - csharp
  - vb
  name: DiceBox
  nameWithType: DiceBox
  fullName: CardBattle.Core.Actions.Derived.DiceBox
  type: Class
  source:
    id: DiceBox
    path: ''
    startLine: 431
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Core.Actions.Derived
  syntax:
    content: 'public class DiceBox : Action'
    content.vb: >-
      Public Class DiceBox
          Inherits Action
  inheritance:
  - System.Object
  - CardBattle.Core.Actions.Action
  inheritedMembers:
  - CardBattle.Core.Actions.Action.isOptional
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CardBattle.Core.Actions.Derived.DiceBox.OnThrow
  commentId: F:CardBattle.Core.Actions.Derived.DiceBox.OnThrow
  id: OnThrow
  parent: CardBattle.Core.Actions.Derived.DiceBox
  langs:
  - csharp
  - vb
  name: OnThrow
  nameWithType: DiceBox.OnThrow
  fullName: CardBattle.Core.Actions.Derived.DiceBox.OnThrow
  type: Field
  source:
    id: OnThrow
    path: ''
    startLine: 433
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Core.Actions.Derived
  syntax:
    content: public UnityEvent<int> OnThrow
    return:
      type: UnityEvent{System.Int32}
    content.vb: Public OnThrow As UnityEvent(Of Integer)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CardBattle.Core.Actions.Derived.DiceBox.#ctor(System.Int32,System.Boolean)
  commentId: M:CardBattle.Core.Actions.Derived.DiceBox.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: CardBattle.Core.Actions.Derived.DiceBox
  langs:
  - csharp
  - vb
  name: DiceBox(Int32, Boolean)
  nameWithType: DiceBox.DiceBox(Int32, Boolean)
  fullName: CardBattle.Core.Actions.Derived.DiceBox.DiceBox(System.Int32, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 436
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Core.Actions.Derived
  syntax:
    content: public DiceBox(int diceAmount, bool isOptional = false)
    parameters:
    - id: diceAmount
      type: System.Int32
    - id: isOptional
      type: System.Boolean
    content.vb: Public Sub New(diceAmount As Integer, isOptional As Boolean = False)
  overload: CardBattle.Core.Actions.Derived.DiceBox.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CardBattle.Core.Actions.Derived.DiceBox.Execute
  commentId: M:CardBattle.Core.Actions.Derived.DiceBox.Execute
  id: Execute
  parent: CardBattle.Core.Actions.Derived.DiceBox
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: DiceBox.Execute()
  fullName: CardBattle.Core.Actions.Derived.DiceBox.Execute()
  type: Method
  source:
    id: Execute
    path: ''
    startLine: 444
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Core.Actions.Derived
  syntax:
    content: public override void Execute()
    content.vb: Public Overrides Sub Execute
  overridden: CardBattle.Core.Actions.Action.Execute
  overload: CardBattle.Core.Actions.Derived.DiceBox.Execute*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: CardBattle.Core.Actions.Derived
  commentId: N:CardBattle.Core.Actions.Derived
  name: CardBattle.Core.Actions.Derived
  nameWithType: CardBattle.Core.Actions.Derived
  fullName: CardBattle.Core.Actions.Derived
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CardBattle.Core.Actions.Action
  commentId: T:CardBattle.Core.Actions.Action
  parent: CardBattle.Core.Actions
  name: Action
  nameWithType: Action
  fullName: CardBattle.Core.Actions.Action
- uid: CardBattle.Core.Actions.Action.isOptional
  commentId: F:CardBattle.Core.Actions.Action.isOptional
  parent: CardBattle.Core.Actions.Action
  name: isOptional
  nameWithType: Action.isOptional
  fullName: CardBattle.Core.Actions.Action.isOptional
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CardBattle.Core.Actions
  commentId: N:CardBattle.Core.Actions
  name: CardBattle.Core.Actions
  nameWithType: CardBattle.Core.Actions
  fullName: CardBattle.Core.Actions
- uid: UnityEvent{System.Int32}
  commentId: '!:UnityEvent{System.Int32}'
  definition: UnityEvent`1
  name: UnityEvent<Int32>
  nameWithType: UnityEvent<Int32>
  fullName: UnityEvent<System.Int32>
  nameWithType.vb: UnityEvent(Of Int32)
  fullName.vb: UnityEvent(Of System.Int32)
  name.vb: UnityEvent(Of Int32)
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: System.Int32
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: UnityEvent`1
  commentId: '!:UnityEvent`1'
  isExternal: true
  name: UnityEvent<>
  nameWithType: UnityEvent<>
  fullName: UnityEvent<>
  nameWithType.vb: UnityEvent(Of )
  fullName.vb: UnityEvent(Of )
  name.vb: UnityEvent(Of )
  spec.csharp:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: UnityEvent`1
    name: UnityEvent
    nameWithType: UnityEvent
    fullName: UnityEvent
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: CardBattle.Core.Actions.Derived.DiceBox.#ctor*
  commentId: Overload:CardBattle.Core.Actions.Derived.DiceBox.#ctor
  name: DiceBox
  nameWithType: DiceBox.DiceBox
  fullName: CardBattle.Core.Actions.Derived.DiceBox.DiceBox
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CardBattle.Core.Actions.Action.Execute
  commentId: M:CardBattle.Core.Actions.Action.Execute
  parent: CardBattle.Core.Actions.Action
  name: Execute()
  nameWithType: Action.Execute()
  fullName: CardBattle.Core.Actions.Action.Execute()
  spec.csharp:
  - uid: CardBattle.Core.Actions.Action.Execute
    name: Execute
    nameWithType: Action.Execute
    fullName: CardBattle.Core.Actions.Action.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CardBattle.Core.Actions.Action.Execute
    name: Execute
    nameWithType: Action.Execute
    fullName: CardBattle.Core.Actions.Action.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CardBattle.Core.Actions.Derived.DiceBox.Execute*
  commentId: Overload:CardBattle.Core.Actions.Derived.DiceBox.Execute
  name: Execute
  nameWithType: DiceBox.Execute
  fullName: CardBattle.Core.Actions.Derived.DiceBox.Execute
