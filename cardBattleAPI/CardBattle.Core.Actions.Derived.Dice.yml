### YamlMime:ManagedReference
items:
- uid: CardBattle.Core.Actions.Derived.Dice
  commentId: T:CardBattle.Core.Actions.Derived.Dice
  id: Dice
  parent: CardBattle.Core.Actions.Derived
  children:
  - CardBattle.Core.Actions.Derived.Dice.#ctor(CardBattle.Core.Actions.Action[],System.Boolean)
  - CardBattle.Core.Actions.Derived.Dice.#ctor(System.Boolean)
  - CardBattle.Core.Actions.Derived.Dice.actions
  - CardBattle.Core.Actions.Derived.Dice.Execute
  - CardBattle.Core.Actions.Derived.Dice.Throw
  langs:
  - csharp
  - vb
  name: Dice
  nameWithType: Dice
  fullName: CardBattle.Core.Actions.Derived.Dice
  type: Class
  source:
    id: Dice
    path: ''
    startLine: 446
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Core.Actions.Derived
  syntax:
    content: 'public class Dice : Action'
    content.vb: >-
      Public Class Dice
          Inherits Action
  inheritance:
  - System.Object
  - CardBattle.Core.Actions.Action
  inheritedMembers:
  - CardBattle.Core.Actions.Action.isOptional
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: CardBattle.Core.Actions.Derived.Dice.actions
  commentId: F:CardBattle.Core.Actions.Derived.Dice.actions
  id: actions
  parent: CardBattle.Core.Actions.Derived.Dice
  langs:
  - csharp
  - vb
  name: actions
  nameWithType: Dice.actions
  fullName: CardBattle.Core.Actions.Derived.Dice.actions
  type: Field
  source:
    id: actions
    path: ''
    startLine: 448
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Core.Actions.Derived
  syntax:
    content: protected Action[] actions
    return:
      type: CardBattle.Core.Actions.Action[]
    content.vb: Protected actions As Action()
  modifiers.csharp:
  - protected
  modifiers.vb:
  - Protected
- uid: CardBattle.Core.Actions.Derived.Dice.#ctor(System.Boolean)
  commentId: M:CardBattle.Core.Actions.Derived.Dice.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: CardBattle.Core.Actions.Derived.Dice
  langs:
  - csharp
  - vb
  name: Dice(Boolean)
  nameWithType: Dice.Dice(Boolean)
  fullName: CardBattle.Core.Actions.Derived.Dice.Dice(System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 450
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Core.Actions.Derived
  syntax:
    content: public Dice(bool isOptional = false)
    parameters:
    - id: isOptional
      type: System.Boolean
    content.vb: Public Sub New(isOptional As Boolean = False)
  overload: CardBattle.Core.Actions.Derived.Dice.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CardBattle.Core.Actions.Derived.Dice.#ctor(CardBattle.Core.Actions.Action[],System.Boolean)
  commentId: M:CardBattle.Core.Actions.Derived.Dice.#ctor(CardBattle.Core.Actions.Action[],System.Boolean)
  id: '#ctor(CardBattle.Core.Actions.Action[],System.Boolean)'
  parent: CardBattle.Core.Actions.Derived.Dice
  langs:
  - csharp
  - vb
  name: Dice(Action[], Boolean)
  nameWithType: Dice.Dice(Action[], Boolean)
  fullName: CardBattle.Core.Actions.Derived.Dice.Dice(CardBattle.Core.Actions.Action[], System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 455
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Core.Actions.Derived
  syntax:
    content: public Dice(Action[] actions, bool isOptional = false)
    parameters:
    - id: actions
      type: CardBattle.Core.Actions.Action[]
    - id: isOptional
      type: System.Boolean
    content.vb: Public Sub New(actions As Action(), isOptional As Boolean = False)
  overload: CardBattle.Core.Actions.Derived.Dice.#ctor*
  nameWithType.vb: Dice.Dice(Action(), Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: CardBattle.Core.Actions.Derived.Dice.Dice(CardBattle.Core.Actions.Action(), System.Boolean)
  name.vb: Dice(Action(), Boolean)
- uid: CardBattle.Core.Actions.Derived.Dice.Throw
  commentId: M:CardBattle.Core.Actions.Derived.Dice.Throw
  id: Throw
  parent: CardBattle.Core.Actions.Derived.Dice
  langs:
  - csharp
  - vb
  name: Throw()
  nameWithType: Dice.Throw()
  fullName: CardBattle.Core.Actions.Derived.Dice.Throw()
  type: Method
  source:
    id: Throw
    path: ''
    startLine: 461
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Core.Actions.Derived
  syntax:
    content: public int Throw()
    return:
      type: System.Int32
    content.vb: Public Function Throw As Integer
  overload: CardBattle.Core.Actions.Derived.Dice.Throw*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: CardBattle.Core.Actions.Derived.Dice.Execute
  commentId: M:CardBattle.Core.Actions.Derived.Dice.Execute
  id: Execute
  parent: CardBattle.Core.Actions.Derived.Dice
  langs:
  - csharp
  - vb
  name: Execute()
  nameWithType: Dice.Execute()
  fullName: CardBattle.Core.Actions.Derived.Dice.Execute()
  type: Method
  source:
    id: Execute
    path: ''
    startLine: 467
  assemblies:
  - cs.temp.dll
  namespace: CardBattle.Core.Actions.Derived
  syntax:
    content: public override void Execute()
    content.vb: Public Overrides Sub Execute
  overridden: CardBattle.Core.Actions.Action.Execute
  overload: CardBattle.Core.Actions.Derived.Dice.Execute*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: CardBattle.Core.Actions.Derived
  commentId: N:CardBattle.Core.Actions.Derived
  name: CardBattle.Core.Actions.Derived
  nameWithType: CardBattle.Core.Actions.Derived
  fullName: CardBattle.Core.Actions.Derived
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: CardBattle.Core.Actions.Action
  commentId: T:CardBattle.Core.Actions.Action
  parent: CardBattle.Core.Actions
  name: Action
  nameWithType: Action
  fullName: CardBattle.Core.Actions.Action
- uid: CardBattle.Core.Actions.Action.isOptional
  commentId: F:CardBattle.Core.Actions.Action.isOptional
  parent: CardBattle.Core.Actions.Action
  name: isOptional
  nameWithType: Action.isOptional
  fullName: CardBattle.Core.Actions.Action.isOptional
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: CardBattle.Core.Actions
  commentId: N:CardBattle.Core.Actions
  name: CardBattle.Core.Actions
  nameWithType: CardBattle.Core.Actions
  fullName: CardBattle.Core.Actions
- uid: CardBattle.Core.Actions.Action[]
  isExternal: true
  name: Action[]
  nameWithType: Action[]
  fullName: CardBattle.Core.Actions.Action[]
  nameWithType.vb: Action()
  fullName.vb: CardBattle.Core.Actions.Action()
  name.vb: Action()
  spec.csharp:
  - uid: CardBattle.Core.Actions.Action
    name: Action
    nameWithType: Action
    fullName: CardBattle.Core.Actions.Action
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: CardBattle.Core.Actions.Action
    name: Action
    nameWithType: Action
    fullName: CardBattle.Core.Actions.Action
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: CardBattle.Core.Actions.Derived.Dice.#ctor*
  commentId: Overload:CardBattle.Core.Actions.Derived.Dice.#ctor
  name: Dice
  nameWithType: Dice.Dice
  fullName: CardBattle.Core.Actions.Derived.Dice.Dice
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: CardBattle.Core.Actions.Derived.Dice.Throw*
  commentId: Overload:CardBattle.Core.Actions.Derived.Dice.Throw
  name: Throw
  nameWithType: Dice.Throw
  fullName: CardBattle.Core.Actions.Derived.Dice.Throw
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: CardBattle.Core.Actions.Action.Execute
  commentId: M:CardBattle.Core.Actions.Action.Execute
  parent: CardBattle.Core.Actions.Action
  name: Execute()
  nameWithType: Action.Execute()
  fullName: CardBattle.Core.Actions.Action.Execute()
  spec.csharp:
  - uid: CardBattle.Core.Actions.Action.Execute
    name: Execute
    nameWithType: Action.Execute
    fullName: CardBattle.Core.Actions.Action.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: CardBattle.Core.Actions.Action.Execute
    name: Execute
    nameWithType: Action.Execute
    fullName: CardBattle.Core.Actions.Action.Execute
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: CardBattle.Core.Actions.Derived.Dice.Execute*
  commentId: Overload:CardBattle.Core.Actions.Derived.Dice.Execute
  name: Execute
  nameWithType: Dice.Execute
  fullName: CardBattle.Core.Actions.Derived.Dice.Execute
