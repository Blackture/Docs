### YamlMime:ManagedReference
items:
- uid: TheInvaders.Storage`1
  commentId: T:TheInvaders.Storage`1
  id: Storage`1
  parent: TheInvaders
  children:
  - TheInvaders.Storage`1.#ctor(System.String)
  - TheInvaders.Storage`1.#ctor(System.String,System.String,`0)
  - TheInvaders.Storage`1.Data
  - TheInvaders.Storage`1.Date
  - TheInvaders.Storage`1.Load(`0@)
  - TheInvaders.Storage`1.Name
  - TheInvaders.Storage`1.Save
  langs:
  - csharp
  - vb
  name: Storage<T>
  nameWithType: Storage<T>
  fullName: TheInvaders.Storage<T>
  type: Class
  source:
    id: Storage
    path: ''
    startLine: 1482
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: >-
      [Serializable]

      public class Storage<T>
          where T : new()
    typeParameters:
    - id: T
    content.vb: >-
      <Serializable>

      Public Class Storage(Of T As New)
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  nameWithType.vb: Storage(Of T)
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
  fullName.vb: TheInvaders.Storage(Of T)
  name.vb: Storage(Of T)
- uid: TheInvaders.Storage`1.Name
  commentId: P:TheInvaders.Storage`1.Name
  id: Name
  parent: TheInvaders.Storage`1
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Storage<T>.Name
  fullName: TheInvaders.Storage<T>.Name
  type: Property
  source:
    id: Name
    path: ''
    startLine: 1490
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: TheInvaders.Storage`1.Name*
  nameWithType.vb: Storage(Of T).Name
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TheInvaders.Storage(Of T).Name
- uid: TheInvaders.Storage`1.Data
  commentId: P:TheInvaders.Storage`1.Data
  id: Data
  parent: TheInvaders.Storage`1
  langs:
  - csharp
  - vb
  name: Data
  nameWithType: Storage<T>.Data
  fullName: TheInvaders.Storage<T>.Data
  type: Property
  source:
    id: Data
    path: ''
    startLine: 1491
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public T Data { get; }
    parameters: []
    return:
      type: '{T}'
    content.vb: Public ReadOnly Property Data As T
  overload: TheInvaders.Storage`1.Data*
  nameWithType.vb: Storage(Of T).Data
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TheInvaders.Storage(Of T).Data
- uid: TheInvaders.Storage`1.Date
  commentId: P:TheInvaders.Storage`1.Date
  id: Date
  parent: TheInvaders.Storage`1
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: Storage<T>.Date
  fullName: TheInvaders.Storage<T>.Date
  type: Property
  source:
    id: Date
    path: ''
    startLine: 1492
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public DateTime Date { get; }
    parameters: []
    return:
      type: System.DateTime
    content.vb: Public ReadOnly Property Date As Date
  overload: TheInvaders.Storage`1.Date*
  nameWithType.vb: Storage(Of T).Date
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
  fullName.vb: TheInvaders.Storage(Of T).Date
- uid: TheInvaders.Storage`1.#ctor(System.String,System.String,`0)
  commentId: M:TheInvaders.Storage`1.#ctor(System.String,System.String,`0)
  id: '#ctor(System.String,System.String,`0)'
  parent: TheInvaders.Storage`1
  langs:
  - csharp
  - vb
  name: Storage(String, String, T)
  nameWithType: Storage<T>.Storage(String, String, T)
  fullName: TheInvaders.Storage<T>.Storage(System.String, System.String, T)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1494
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public Storage(string name, string path, T data)
    parameters:
    - id: name
      type: System.String
    - id: path
      type: System.String
    - id: data
      type: '{T}'
    content.vb: Public Sub New(name As String, path As String, data As T)
  overload: TheInvaders.Storage`1.#ctor*
  nameWithType.vb: Storage(Of T).Storage(String, String, T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TheInvaders.Storage(Of T).Storage(System.String, System.String, T)
- uid: TheInvaders.Storage`1.#ctor(System.String)
  commentId: M:TheInvaders.Storage`1.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: TheInvaders.Storage`1
  langs:
  - csharp
  - vb
  name: Storage(String)
  nameWithType: Storage<T>.Storage(String)
  fullName: TheInvaders.Storage<T>.Storage(System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1502
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public Storage(string path)
    parameters:
    - id: path
      type: System.String
    content.vb: Public Sub New(path As String)
  overload: TheInvaders.Storage`1.#ctor*
  nameWithType.vb: Storage(Of T).Storage(String)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TheInvaders.Storage(Of T).Storage(System.String)
- uid: TheInvaders.Storage`1.Save
  commentId: M:TheInvaders.Storage`1.Save
  id: Save
  parent: TheInvaders.Storage`1
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: Storage<T>.Save()
  fullName: TheInvaders.Storage<T>.Save()
  type: Method
  source:
    id: Save
    path: ''
    startLine: 1507
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public bool Save()
    return:
      type: System.Boolean
    content.vb: Public Function Save As Boolean
  overload: TheInvaders.Storage`1.Save*
  nameWithType.vb: Storage(Of T).Save()
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TheInvaders.Storage(Of T).Save()
- uid: TheInvaders.Storage`1.Load(`0@)
  commentId: M:TheInvaders.Storage`1.Load(`0@)
  id: Load(`0@)
  parent: TheInvaders.Storage`1
  langs:
  - csharp
  - vb
  name: Load(out T)
  nameWithType: Storage<T>.Load(out T)
  fullName: TheInvaders.Storage<T>.Load(out T)
  type: Method
  source:
    id: Load
    path: ''
    startLine: 1531
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public bool Load(out T data)
    parameters:
    - id: data
      type: '{T}'
    return:
      type: System.Boolean
    content.vb: Public Function Load(ByRef data As T) As Boolean
  overload: TheInvaders.Storage`1.Load*
  nameWithType.vb: Storage(Of T).Load(ByRef T)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: TheInvaders.Storage(Of T).Load(ByRef T)
  name.vb: Load(ByRef T)
references:
- uid: TheInvaders
  commentId: N:TheInvaders
  name: TheInvaders
  nameWithType: TheInvaders
  fullName: TheInvaders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TheInvaders.Storage`1.Name*
  commentId: Overload:TheInvaders.Storage`1.Name
  name: Name
  nameWithType: Storage<T>.Name
  fullName: TheInvaders.Storage<T>.Name
  nameWithType.vb: Storage(Of T).Name
  fullName.vb: TheInvaders.Storage(Of T).Name
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TheInvaders.Storage`1.Data*
  commentId: Overload:TheInvaders.Storage`1.Data
  name: Data
  nameWithType: Storage<T>.Data
  fullName: TheInvaders.Storage<T>.Data
  nameWithType.vb: Storage(Of T).Data
  fullName.vb: TheInvaders.Storage(Of T).Data
- uid: '{T}'
  commentId: '!:T'
  definition: T
  name: T
  nameWithType: T
  fullName: T
- uid: T
  name: T
  nameWithType: T
  fullName: T
- uid: TheInvaders.Storage`1.Date*
  commentId: Overload:TheInvaders.Storage`1.Date
  name: Date
  nameWithType: Storage<T>.Date
  fullName: TheInvaders.Storage<T>.Date
  nameWithType.vb: Storage(Of T).Date
  fullName.vb: TheInvaders.Storage(Of T).Date
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: TheInvaders.Storage`1.#ctor*
  commentId: Overload:TheInvaders.Storage`1.#ctor
  name: Storage
  nameWithType: Storage<T>.Storage
  fullName: TheInvaders.Storage<T>.Storage
  nameWithType.vb: Storage(Of T).Storage
  fullName.vb: TheInvaders.Storage(Of T).Storage
- uid: TheInvaders.Storage`1.Save*
  commentId: Overload:TheInvaders.Storage`1.Save
  name: Save
  nameWithType: Storage<T>.Save
  fullName: TheInvaders.Storage<T>.Save
  nameWithType.vb: Storage(Of T).Save
  fullName.vb: TheInvaders.Storage(Of T).Save
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TheInvaders.Storage`1.Load*
  commentId: Overload:TheInvaders.Storage`1.Load
  name: Load
  nameWithType: Storage<T>.Load
  fullName: TheInvaders.Storage<T>.Load
  nameWithType.vb: Storage(Of T).Load
  fullName.vb: TheInvaders.Storage(Of T).Load
