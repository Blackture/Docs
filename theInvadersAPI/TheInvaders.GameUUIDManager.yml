### YamlMime:ManagedReference
items:
- uid: TheInvaders.GameUUIDManager
  commentId: T:TheInvaders.GameUUIDManager
  id: GameUUIDManager
  parent: TheInvaders
  children:
  - TheInvaders.GameUUIDManager.database
  - TheInvaders.GameUUIDManager.GetUser(ObjectId)
  - TheInvaders.GameUUIDManager.HasAccess
  - TheInvaders.GameUUIDManager.instance
  - TheInvaders.GameUUIDManager.IsUserRegistered(LoginData)
  - TheInvaders.GameUUIDManager.LoadUser(LoginData)
  - TheInvaders.GameUUIDManager.UpdateUser
  - TheInvaders.GameUUIDManager.UsrData
  langs:
  - csharp
  - vb
  name: GameUUIDManager
  nameWithType: GameUUIDManager
  fullName: TheInvaders.GameUUIDManager
  type: Class
  source:
    id: GameUUIDManager
    path: ''
    startLine: 1060
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: 'public class GameUUIDManager : MonoBehaviour'
    content.vb: >-
      Public Class GameUUIDManager
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TheInvaders.GameUUIDManager.instance
  commentId: F:TheInvaders.GameUUIDManager.instance
  id: instance
  parent: TheInvaders.GameUUIDManager
  langs:
  - csharp
  - vb
  name: instance
  nameWithType: GameUUIDManager.instance
  fullName: TheInvaders.GameUUIDManager.instance
  type: Field
  source:
    id: instance
    path: ''
    startLine: 1062
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public static GameUUIDManager instance
    return:
      type: TheInvaders.GameUUIDManager
    content.vb: Public Shared instance As GameUUIDManager
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TheInvaders.GameUUIDManager.database
  commentId: F:TheInvaders.GameUUIDManager.database
  id: database
  parent: TheInvaders.GameUUIDManager
  langs:
  - csharp
  - vb
  name: database
  nameWithType: GameUUIDManager.database
  fullName: TheInvaders.GameUUIDManager.database
  type: Field
  source:
    id: database
    path: ''
    startLine: 1068
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public IMongoDatabase database
    return:
      type: IMongoDatabase
    content.vb: Public database As IMongoDatabase
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TheInvaders.GameUUIDManager.UsrData
  commentId: P:TheInvaders.GameUUIDManager.UsrData
  id: UsrData
  parent: TheInvaders.GameUUIDManager
  langs:
  - csharp
  - vb
  name: UsrData
  nameWithType: GameUUIDManager.UsrData
  fullName: TheInvaders.GameUUIDManager.UsrData
  type: Property
  source:
    id: UsrData
    path: ''
    startLine: 1072
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public UserData UsrData { get; }
    parameters: []
    return:
      type: TheInvaders.UserData
    content.vb: Public ReadOnly Property UsrData As UserData
  overload: TheInvaders.GameUUIDManager.UsrData*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TheInvaders.GameUUIDManager.UpdateUser
  commentId: M:TheInvaders.GameUUIDManager.UpdateUser
  id: UpdateUser
  parent: TheInvaders.GameUUIDManager
  langs:
  - csharp
  - vb
  name: UpdateUser()
  nameWithType: GameUUIDManager.UpdateUser()
  fullName: TheInvaders.GameUUIDManager.UpdateUser()
  type: Method
  source:
    id: UpdateUser
    path: ''
    startLine: 1083
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public void UpdateUser()
    content.vb: Public Sub UpdateUser
  overload: TheInvaders.GameUUIDManager.UpdateUser*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TheInvaders.GameUUIDManager.LoadUser(LoginData)
  commentId: M:TheInvaders.GameUUIDManager.LoadUser(LoginData)
  id: LoadUser(LoginData)
  parent: TheInvaders.GameUUIDManager
  langs:
  - csharp
  - vb
  name: LoadUser(LoginData)
  nameWithType: GameUUIDManager.LoadUser(LoginData)
  fullName: TheInvaders.GameUUIDManager.LoadUser(LoginData)
  type: Method
  source:
    id: LoadUser
    path: ''
    startLine: 1089
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public async void LoadUser(LoginData data)
    parameters:
    - id: data
      type: LoginData
    content.vb: Public Sub LoadUser(data As LoginData)
  overload: TheInvaders.GameUUIDManager.LoadUser*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: TheInvaders.GameUUIDManager.HasAccess
  commentId: M:TheInvaders.GameUUIDManager.HasAccess
  id: HasAccess
  parent: TheInvaders.GameUUIDManager
  langs:
  - csharp
  - vb
  name: HasAccess()
  nameWithType: GameUUIDManager.HasAccess()
  fullName: TheInvaders.GameUUIDManager.HasAccess()
  type: Method
  source:
    id: HasAccess
    path: ''
    startLine: 1125
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public bool HasAccess()
    return:
      type: System.Boolean
    content.vb: Public Function HasAccess As Boolean
  overload: TheInvaders.GameUUIDManager.HasAccess*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TheInvaders.GameUUIDManager.IsUserRegistered(LoginData)
  commentId: M:TheInvaders.GameUUIDManager.IsUserRegistered(LoginData)
  id: IsUserRegistered(LoginData)
  parent: TheInvaders.GameUUIDManager
  langs:
  - csharp
  - vb
  name: IsUserRegistered(LoginData)
  nameWithType: GameUUIDManager.IsUserRegistered(LoginData)
  fullName: TheInvaders.GameUUIDManager.IsUserRegistered(LoginData)
  type: Method
  source:
    id: IsUserRegistered
    path: ''
    startLine: 1159
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public async Task<List<object>> IsUserRegistered(LoginData data)
    parameters:
    - id: data
      type: LoginData
    return:
      type: Task{List{System.Object}}
    content.vb: Public Function IsUserRegistered(data As LoginData) As Task(Of List(Of Object))
  overload: TheInvaders.GameUUIDManager.IsUserRegistered*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
- uid: TheInvaders.GameUUIDManager.GetUser(ObjectId)
  commentId: M:TheInvaders.GameUUIDManager.GetUser(ObjectId)
  id: GetUser(ObjectId)
  parent: TheInvaders.GameUUIDManager
  langs:
  - csharp
  - vb
  name: GetUser(ObjectId)
  nameWithType: GameUUIDManager.GetUser(ObjectId)
  fullName: TheInvaders.GameUUIDManager.GetUser(ObjectId)
  type: Method
  source:
    id: GetUser
    path: ''
    startLine: 1174
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public async Task<UserData> GetUser(ObjectId id)
    parameters:
    - id: id
      type: ObjectId
    return:
      type: Task{TheInvaders.UserData}
    content.vb: Public Function GetUser(id As ObjectId) As Task(Of UserData)
  overload: TheInvaders.GameUUIDManager.GetUser*
  modifiers.csharp:
  - public
  - async
  modifiers.vb:
  - Public
references:
- uid: TheInvaders
  commentId: N:TheInvaders
  name: TheInvaders
  nameWithType: TheInvaders
  fullName: TheInvaders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TheInvaders.GameUUIDManager
  commentId: T:TheInvaders.GameUUIDManager
  parent: TheInvaders
  name: GameUUIDManager
  nameWithType: GameUUIDManager
  fullName: TheInvaders.GameUUIDManager
- uid: IMongoDatabase
  commentId: '!:IMongoDatabase'
  isExternal: true
  name: IMongoDatabase
  nameWithType: IMongoDatabase
  fullName: IMongoDatabase
- uid: TheInvaders.GameUUIDManager.UsrData*
  commentId: Overload:TheInvaders.GameUUIDManager.UsrData
  name: UsrData
  nameWithType: GameUUIDManager.UsrData
  fullName: TheInvaders.GameUUIDManager.UsrData
- uid: TheInvaders.UserData
  commentId: T:TheInvaders.UserData
  parent: TheInvaders
  name: UserData
  nameWithType: UserData
  fullName: TheInvaders.UserData
- uid: TheInvaders.GameUUIDManager.UpdateUser*
  commentId: Overload:TheInvaders.GameUUIDManager.UpdateUser
  name: UpdateUser
  nameWithType: GameUUIDManager.UpdateUser
  fullName: TheInvaders.GameUUIDManager.UpdateUser
- uid: TheInvaders.GameUUIDManager.LoadUser*
  commentId: Overload:TheInvaders.GameUUIDManager.LoadUser
  name: LoadUser
  nameWithType: GameUUIDManager.LoadUser
  fullName: TheInvaders.GameUUIDManager.LoadUser
- uid: LoginData
  isExternal: true
  name: LoginData
  nameWithType: LoginData
  fullName: LoginData
- uid: TheInvaders.GameUUIDManager.HasAccess*
  commentId: Overload:TheInvaders.GameUUIDManager.HasAccess
  name: HasAccess
  nameWithType: GameUUIDManager.HasAccess
  fullName: TheInvaders.GameUUIDManager.HasAccess
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TheInvaders.GameUUIDManager.IsUserRegistered*
  commentId: Overload:TheInvaders.GameUUIDManager.IsUserRegistered
  name: IsUserRegistered
  nameWithType: GameUUIDManager.IsUserRegistered
  fullName: TheInvaders.GameUUIDManager.IsUserRegistered
- uid: Task{List{System.Object}}
  commentId: '!:Task{List{System.Object}}'
  definition: Task`1
  name: Task<List<Object>>
  nameWithType: Task<List<Object>>
  fullName: Task<List<System.Object>>
  nameWithType.vb: Task(Of List(Of Object))
  fullName.vb: Task(Of List(Of System.Object))
  name.vb: Task(Of List(Of Object))
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  - name: )
    nameWithType: )
    fullName: )
- uid: Task`1
  isExternal: true
  name: Task<>
  nameWithType: Task<>
  fullName: Task<>
  nameWithType.vb: Task(Of )
  fullName.vb: Task(Of )
  name.vb: Task(Of )
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: TheInvaders.GameUUIDManager.GetUser*
  commentId: Overload:TheInvaders.GameUUIDManager.GetUser
  name: GetUser
  nameWithType: GameUUIDManager.GetUser
  fullName: TheInvaders.GameUUIDManager.GetUser
- uid: ObjectId
  isExternal: true
  name: ObjectId
  nameWithType: ObjectId
  fullName: ObjectId
- uid: Task{TheInvaders.UserData}
  commentId: '!:Task{TheInvaders.UserData}'
  definition: Task`1
  name: Task<UserData>
  nameWithType: Task<UserData>
  fullName: Task<TheInvaders.UserData>
  nameWithType.vb: Task(Of UserData)
  fullName.vb: Task(Of TheInvaders.UserData)
  name.vb: Task(Of UserData)
  spec.csharp:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TheInvaders.UserData
    name: UserData
    nameWithType: UserData
    fullName: TheInvaders.UserData
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: Task`1
    name: Task
    nameWithType: Task
    fullName: Task
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TheInvaders.UserData
    name: UserData
    nameWithType: UserData
    fullName: TheInvaders.UserData
  - name: )
    nameWithType: )
    fullName: )
