### YamlMime:ManagedReference
items:
- uid: TheInvaders.Battlefield.UnitController
  commentId: T:TheInvaders.Battlefield.UnitController
  id: UnitController
  parent: TheInvaders.Battlefield
  children:
  - TheInvaders.Battlefield.UnitController.character
  - TheInvaders.Battlefield.UnitController.Duration
  - TheInvaders.Battlefield.UnitController.IsActive
  - TheInvaders.Battlefield.UnitController.LerpTo(System.Boolean)
  - TheInvaders.Battlefield.UnitController.Repositioned
  langs:
  - csharp
  - vb
  name: UnitController
  nameWithType: UnitController
  fullName: TheInvaders.Battlefield.UnitController
  type: Class
  source:
    id: UnitController
    path: ''
    startLine: 2148
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Battlefield
  summary: "\nThe <xref href=\"TheInvaders.Battlefield.UnitController\" data-throw-if-not-resolved=\"false\"></xref> controlles the unit game objects. It mainly controlles the <see cref=\"!:Color\"></see> lerps\n<ol><li>DEUnitController</li><li>ENUnitController</li><li>ENDE</li></ol>\n"
  example: []
  syntax:
    content: 'public class UnitController : MonoBehaviour'
    content.vb: >-
      Public Class UnitController
          Inherits MonoBehaviour
  inheritance:
  - System.Object
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TheInvaders.Battlefield.UnitController.character
  commentId: F:TheInvaders.Battlefield.UnitController.character
  id: character
  parent: TheInvaders.Battlefield.UnitController
  langs:
  - csharp
  - vb
  name: character
  nameWithType: UnitController.character
  fullName: TheInvaders.Battlefield.UnitController.character
  type: Field
  source:
    id: character
    path: ''
    startLine: 2175
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Battlefield
  syntax:
    content: public Character character
    return:
      type: TheInvaders.Character
    content.vb: Public character As Character
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TheInvaders.Battlefield.UnitController.Repositioned
  commentId: P:TheInvaders.Battlefield.UnitController.Repositioned
  id: Repositioned
  parent: TheInvaders.Battlefield.UnitController
  langs:
  - csharp
  - vb
  name: Repositioned
  nameWithType: UnitController.Repositioned
  fullName: TheInvaders.Battlefield.UnitController.Repositioned
  type: Property
  source:
    id: Repositioned
    path: ''
    startLine: 2178
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Battlefield
  syntax:
    content: public bool Repositioned { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property Repositioned As Boolean
  overload: TheInvaders.Battlefield.UnitController.Repositioned*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TheInvaders.Battlefield.UnitController.Duration
  commentId: P:TheInvaders.Battlefield.UnitController.Duration
  id: Duration
  parent: TheInvaders.Battlefield.UnitController
  langs:
  - csharp
  - vb
  name: Duration
  nameWithType: UnitController.Duration
  fullName: TheInvaders.Battlefield.UnitController.Duration
  type: Property
  source:
    id: Duration
    path: ''
    startLine: 2222
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Battlefield
  summary: "\nThe duration that a lerp lasts. No value below 0 will be set\n"
  example: []
  syntax:
    content: public float Duration { get; set; }
    parameters: []
    return:
      type: System.Single
    content.vb: Public Property Duration As Single
  overload: TheInvaders.Battlefield.UnitController.Duration*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: TheInvaders.Battlefield.UnitController.IsActive
  commentId: P:TheInvaders.Battlefield.UnitController.IsActive
  id: IsActive
  parent: TheInvaders.Battlefield.UnitController
  langs:
  - csharp
  - vb
  name: IsActive
  nameWithType: UnitController.IsActive
  fullName: TheInvaders.Battlefield.UnitController.IsActive
  type: Property
  source:
    id: IsActive
    path: ''
    startLine: 2228
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Battlefield
  summary: "\nIs the unit selected?\n"
  example: []
  syntax:
    content: public bool IsActive { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsActive As Boolean
  overload: TheInvaders.Battlefield.UnitController.IsActive*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TheInvaders.Battlefield.UnitController.LerpTo(System.Boolean)
  commentId: M:TheInvaders.Battlefield.UnitController.LerpTo(System.Boolean)
  id: LerpTo(System.Boolean)
  parent: TheInvaders.Battlefield.UnitController
  langs:
  - csharp
  - vb
  name: LerpTo(Boolean)
  nameWithType: UnitController.LerpTo(Boolean)
  fullName: TheInvaders.Battlefield.UnitController.LerpTo(System.Boolean)
  type: Method
  source:
    id: LerpTo
    path: ''
    startLine: 2256
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Battlefield
  summary: "\nStart color lerp to active or inactive by bool <code data-dev-comment-type=\"paramref\" class=\"paramref\">active</code>. It sets the <xref href=\"TheInvaders.Battlefield.UnitController.isActive\" data-throw-if-not-resolved=\"false\"></xref> to the <code data-dev-comment-type=\"paramref\" class=\"paramref\">active</code> parameter.\n<p><code data-dev-comment-type=\"paramref\" class=\"paramref\">active</code> tells if the color should lerp to active (true) or inactive (false)</p>\n"
  example: []
  syntax:
    content: public void LerpTo(bool active)
    parameters:
    - id: active
      type: System.Boolean
      description: ''
    content.vb: Public Sub LerpTo(active As Boolean)
  overload: TheInvaders.Battlefield.UnitController.LerpTo*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TheInvaders.Battlefield.UnitController
  commentId: T:TheInvaders.Battlefield.UnitController
  name: UnitController
  nameWithType: UnitController
  fullName: TheInvaders.Battlefield.UnitController
- uid: TheInvaders.Battlefield
  commentId: N:TheInvaders.Battlefield
  name: TheInvaders.Battlefield
  nameWithType: TheInvaders.Battlefield
  fullName: TheInvaders.Battlefield
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: TheInvaders.Character
  commentId: T:TheInvaders.Character
  parent: TheInvaders
  name: Character
  nameWithType: Character
  fullName: TheInvaders.Character
- uid: TheInvaders
  commentId: N:TheInvaders
  name: TheInvaders
  nameWithType: TheInvaders
  fullName: TheInvaders
- uid: TheInvaders.Battlefield.UnitController.Repositioned*
  commentId: Overload:TheInvaders.Battlefield.UnitController.Repositioned
  name: Repositioned
  nameWithType: UnitController.Repositioned
  fullName: TheInvaders.Battlefield.UnitController.Repositioned
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: TheInvaders.Battlefield.UnitController.Duration*
  commentId: Overload:TheInvaders.Battlefield.UnitController.Duration
  name: Duration
  nameWithType: UnitController.Duration
  fullName: TheInvaders.Battlefield.UnitController.Duration
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: TheInvaders.Battlefield.UnitController.IsActive*
  commentId: Overload:TheInvaders.Battlefield.UnitController.IsActive
  name: IsActive
  nameWithType: UnitController.IsActive
  fullName: TheInvaders.Battlefield.UnitController.IsActive
- uid: TheInvaders.Battlefield.UnitController.isActive
  commentId: F:TheInvaders.Battlefield.UnitController.isActive
  isExternal: true
- uid: TheInvaders.Battlefield.UnitController.LerpTo*
  commentId: Overload:TheInvaders.Battlefield.UnitController.LerpTo
  name: LerpTo
  nameWithType: UnitController.LerpTo
  fullName: TheInvaders.Battlefield.UnitController.LerpTo
