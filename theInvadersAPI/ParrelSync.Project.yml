### YamlMime:ManagedReference
items:
- uid: ParrelSync.Project
  commentId: T:ParrelSync.Project
  id: Project
  parent: ParrelSync
  children:
  - ParrelSync.Project.#ctor
  - ParrelSync.Project.#ctor(System.String)
  - ParrelSync.Project.assetPath
  - ParrelSync.Project.autoBuildPath
  - ParrelSync.Project.Clone
  - ParrelSync.Project.libraryPath
  - ParrelSync.Project.localPackages
  - ParrelSync.Project.name
  - ParrelSync.Project.packagesPath
  - ParrelSync.Project.projectPath
  - ParrelSync.Project.projectSettingsPath
  - ParrelSync.Project.ToString
  - ParrelSync.Project.updateNewName(System.String)
  langs:
  - csharp
  - vb
  name: Project
  nameWithType: Project
  fullName: ParrelSync.Project
  type: Class
  source:
    id: Project
    path: ''
    startLine: 1854
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  syntax:
    content: 'public class Project : ICloneable'
    content.vb: >-
      Public Class Project
          Implements ICloneable
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: ParrelSync.Project.name
  commentId: F:ParrelSync.Project.name
  id: name
  parent: ParrelSync.Project
  langs:
  - csharp
  - vb
  name: name
  nameWithType: Project.name
  fullName: ParrelSync.Project.name
  type: Field
  source:
    id: name
    path: ''
    startLine: 1856
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  syntax:
    content: public string name
    return:
      type: System.String
    content.vb: Public name As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ParrelSync.Project.projectPath
  commentId: F:ParrelSync.Project.projectPath
  id: projectPath
  parent: ParrelSync.Project
  langs:
  - csharp
  - vb
  name: projectPath
  nameWithType: Project.projectPath
  fullName: ParrelSync.Project.projectPath
  type: Field
  source:
    id: projectPath
    path: ''
    startLine: 1857
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  syntax:
    content: public string projectPath
    return:
      type: System.String
    content.vb: Public projectPath As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ParrelSync.Project.assetPath
  commentId: F:ParrelSync.Project.assetPath
  id: assetPath
  parent: ParrelSync.Project
  langs:
  - csharp
  - vb
  name: assetPath
  nameWithType: Project.assetPath
  fullName: ParrelSync.Project.assetPath
  type: Field
  source:
    id: assetPath
    path: ''
    startLine: 1859
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  syntax:
    content: public string assetPath
    return:
      type: System.String
    content.vb: Public assetPath As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ParrelSync.Project.projectSettingsPath
  commentId: F:ParrelSync.Project.projectSettingsPath
  id: projectSettingsPath
  parent: ParrelSync.Project
  langs:
  - csharp
  - vb
  name: projectSettingsPath
  nameWithType: Project.projectSettingsPath
  fullName: ParrelSync.Project.projectSettingsPath
  type: Field
  source:
    id: projectSettingsPath
    path: ''
    startLine: 1860
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  syntax:
    content: public string projectSettingsPath
    return:
      type: System.String
    content.vb: Public projectSettingsPath As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ParrelSync.Project.libraryPath
  commentId: F:ParrelSync.Project.libraryPath
  id: libraryPath
  parent: ParrelSync.Project
  langs:
  - csharp
  - vb
  name: libraryPath
  nameWithType: Project.libraryPath
  fullName: ParrelSync.Project.libraryPath
  type: Field
  source:
    id: libraryPath
    path: ''
    startLine: 1861
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  syntax:
    content: public string libraryPath
    return:
      type: System.String
    content.vb: Public libraryPath As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ParrelSync.Project.packagesPath
  commentId: F:ParrelSync.Project.packagesPath
  id: packagesPath
  parent: ParrelSync.Project
  langs:
  - csharp
  - vb
  name: packagesPath
  nameWithType: Project.packagesPath
  fullName: ParrelSync.Project.packagesPath
  type: Field
  source:
    id: packagesPath
    path: ''
    startLine: 1862
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  syntax:
    content: public string packagesPath
    return:
      type: System.String
    content.vb: Public packagesPath As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ParrelSync.Project.autoBuildPath
  commentId: F:ParrelSync.Project.autoBuildPath
  id: autoBuildPath
  parent: ParrelSync.Project
  langs:
  - csharp
  - vb
  name: autoBuildPath
  nameWithType: Project.autoBuildPath
  fullName: ParrelSync.Project.autoBuildPath
  type: Field
  source:
    id: autoBuildPath
    path: ''
    startLine: 1863
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  syntax:
    content: public string autoBuildPath
    return:
      type: System.String
    content.vb: Public autoBuildPath As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ParrelSync.Project.localPackages
  commentId: F:ParrelSync.Project.localPackages
  id: localPackages
  parent: ParrelSync.Project
  langs:
  - csharp
  - vb
  name: localPackages
  nameWithType: Project.localPackages
  fullName: ParrelSync.Project.localPackages
  type: Field
  source:
    id: localPackages
    path: ''
    startLine: 1864
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  syntax:
    content: public string localPackages
    return:
      type: System.String
    content.vb: Public localPackages As String
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ParrelSync.Project.#ctor
  commentId: M:ParrelSync.Project.#ctor
  id: '#ctor'
  parent: ParrelSync.Project
  langs:
  - csharp
  - vb
  name: Project()
  nameWithType: Project.Project()
  fullName: ParrelSync.Project.Project()
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1872
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  summary: "\nDefault constructor\n"
  example: []
  syntax:
    content: public Project()
    content.vb: Public Sub New
  overload: ParrelSync.Project.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ParrelSync.Project.#ctor(System.String)
  commentId: M:ParrelSync.Project.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: ParrelSync.Project
  langs:
  - csharp
  - vb
  name: Project(String)
  nameWithType: Project.Project(String)
  fullName: ParrelSync.Project.Project(System.String)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 1882
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  summary: "\nInitialize the project object by parsing its full path returned by Unity into a bunch of individual folder names and paths.\n"
  example: []
  syntax:
    content: public Project(string path)
    parameters:
    - id: path
      type: System.String
      description: ''
    content.vb: Public Sub New(path As String)
  overload: ParrelSync.Project.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ParrelSync.Project.Clone
  commentId: M:ParrelSync.Project.Clone
  id: Clone
  parent: ParrelSync.Project
  langs:
  - csharp
  - vb
  name: Clone()
  nameWithType: Project.Clone()
  fullName: ParrelSync.Project.Clone()
  type: Method
  source:
    id: Clone
    path: ''
    startLine: 1892
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  summary: "\nCreate a new object with the same settings\n"
  example: []
  syntax:
    content: public object Clone()
    return:
      type: System.Object
      description: ''
    content.vb: Public Function Clone As Object
  overload: ParrelSync.Project.Clone*
  implements:
  - System.ICloneable.Clone
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ParrelSync.Project.updateNewName(System.String)
  commentId: M:ParrelSync.Project.updateNewName(System.String)
  id: updateNewName(System.String)
  parent: ParrelSync.Project
  langs:
  - csharp
  - vb
  name: updateNewName(String)
  nameWithType: Project.updateNewName(String)
  fullName: ParrelSync.Project.updateNewName(System.String)
  type: Method
  source:
    id: updateNewName
    path: ''
    startLine: 1915
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  summary: "\nUpdate the project object by renaming and reparsing it. Pass in the new name of a project, and it&apos;ll update the other member variables to match.\n"
  example: []
  syntax:
    content: public void updateNewName(string newName)
    parameters:
    - id: newName
      type: System.String
    content.vb: Public Sub updateNewName(newName As String)
  overload: ParrelSync.Project.updateNewName*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: ParrelSync.Project.ToString
  commentId: M:ParrelSync.Project.ToString
  id: ToString
  parent: ParrelSync.Project
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: Project.ToString()
  fullName: ParrelSync.Project.ToString()
  type: Method
  source:
    id: ToString
    path: ''
    startLine: 1926
  assemblies:
  - cs.temp.dll
  namespace: ParrelSync
  summary: "\nDebug override so we can quickly print out the project info.\n"
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: ''
    content.vb: Public Overrides Function ToString As String
  overridden: System.Object.ToString
  overload: ParrelSync.Project.ToString*
  modifiers.csharp:
  - public
  - override
  modifiers.vb:
  - Public
  - Overrides
references:
- uid: ParrelSync
  commentId: N:ParrelSync
  name: ParrelSync
  nameWithType: ParrelSync
  fullName: ParrelSync
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ICloneable
  commentId: T:System.ICloneable
  parent: System
  isExternal: true
  name: ICloneable
  nameWithType: ICloneable
  fullName: System.ICloneable
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: ParrelSync.Project.#ctor*
  commentId: Overload:ParrelSync.Project.#ctor
  name: Project
  nameWithType: Project.Project
  fullName: ParrelSync.Project.Project
- uid: ParrelSync.Project.Clone*
  commentId: Overload:ParrelSync.Project.Clone
  name: Clone
  nameWithType: Project.Clone
  fullName: ParrelSync.Project.Clone
- uid: System.ICloneable.Clone
  commentId: M:System.ICloneable.Clone
  parent: System.ICloneable
  isExternal: true
  name: Clone()
  nameWithType: ICloneable.Clone()
  fullName: System.ICloneable.Clone()
  spec.csharp:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.ICloneable.Clone
    name: Clone
    nameWithType: ICloneable.Clone
    fullName: System.ICloneable.Clone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ParrelSync.Project.updateNewName*
  commentId: Overload:ParrelSync.Project.updateNewName
  name: updateNewName
  nameWithType: Project.updateNewName
  fullName: ParrelSync.Project.updateNewName
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: ParrelSync.Project.ToString*
  commentId: Overload:ParrelSync.Project.ToString
  name: ToString
  nameWithType: Project.ToString
  fullName: ParrelSync.Project.ToString
