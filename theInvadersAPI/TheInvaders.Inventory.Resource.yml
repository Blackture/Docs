### YamlMime:ManagedReference
items:
- uid: TheInvaders.Inventory.Resource
  commentId: T:TheInvaders.Inventory.Resource
  id: Resource
  parent: TheInvaders.Inventory
  children:
  - TheInvaders.Inventory.Resource.#ctor(TheInvaders.Inventory.Resource)
  - TheInvaders.Inventory.Resource.#ctor(TheInvaders.Inventory.Resource.TYPE,Biome.TYPE)
  - TheInvaders.Inventory.Resource.Loc
  - TheInvaders.Inventory.Resource.resources
  - TheInvaders.Inventory.Resource.Type
  langs:
  - csharp
  - vb
  name: Resource
  nameWithType: Resource
  fullName: TheInvaders.Inventory.Resource
  type: Class
  source:
    id: Resource
    path: ''
    startLine: 3855
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Inventory
  syntax:
    content: 'public class Resource : Item, IItem'
    content.vb: >-
      Public Class Resource
          Inherits Item
          Implements IItem
  inheritance:
  - System.Object
  - TheInvaders.Inventory.Item
  implements:
  - TheInvaders.Inventory.IItem
  inheritedMembers:
  - TheInvaders.Inventory.Item.Name
  - TheInvaders.Inventory.Item.Icon
  - TheInvaders.Inventory.Item.Count
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TheInvaders.Inventory.Resource.resources
  commentId: F:TheInvaders.Inventory.Resource.resources
  id: resources
  parent: TheInvaders.Inventory.Resource
  langs:
  - csharp
  - vb
  name: resources
  nameWithType: Resource.resources
  fullName: TheInvaders.Inventory.Resource.resources
  type: Field
  source:
    id: resources
    path: ''
    startLine: 3866
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Inventory
  syntax:
    content: public static List<Resource> resources
    return:
      type: List{TheInvaders.Inventory.Resource}
    content.vb: Public Shared resources As List(Of Resource)
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: TheInvaders.Inventory.Resource.Type
  commentId: P:TheInvaders.Inventory.Resource.Type
  id: Type
  parent: TheInvaders.Inventory.Resource
  langs:
  - csharp
  - vb
  name: Type
  nameWithType: Resource.Type
  fullName: TheInvaders.Inventory.Resource.Type
  type: Property
  source:
    id: Type
    path: ''
    startLine: 3880
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Inventory
  syntax:
    content: public Resource.TYPE Type { get; }
    parameters: []
    return:
      type: TheInvaders.Inventory.Resource.TYPE
    content.vb: Public ReadOnly Property Type As Resource.TYPE
  overload: TheInvaders.Inventory.Resource.Type*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TheInvaders.Inventory.Resource.Loc
  commentId: P:TheInvaders.Inventory.Resource.Loc
  id: Loc
  parent: TheInvaders.Inventory.Resource
  langs:
  - csharp
  - vb
  name: Loc
  nameWithType: Resource.Loc
  fullName: TheInvaders.Inventory.Resource.Loc
  type: Property
  source:
    id: Loc
    path: ''
    startLine: 3886
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Inventory
  syntax:
    content: public Biome.TYPE Loc { get; }
    parameters: []
    return:
      type: Biome.TYPE
    content.vb: Public ReadOnly Property Loc As Biome.TYPE
  overload: TheInvaders.Inventory.Resource.Loc*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TheInvaders.Inventory.Resource.#ctor(TheInvaders.Inventory.Resource)
  commentId: M:TheInvaders.Inventory.Resource.#ctor(TheInvaders.Inventory.Resource)
  id: '#ctor(TheInvaders.Inventory.Resource)'
  parent: TheInvaders.Inventory.Resource
  langs:
  - csharp
  - vb
  name: Resource(Resource)
  nameWithType: Resource.Resource(Resource)
  fullName: TheInvaders.Inventory.Resource.Resource(TheInvaders.Inventory.Resource)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3891
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Inventory
  syntax:
    content: public Resource(Resource _resource)
    parameters:
    - id: _resource
      type: TheInvaders.Inventory.Resource
    content.vb: Public Sub New(_resource As Resource)
  overload: TheInvaders.Inventory.Resource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TheInvaders.Inventory.Resource.#ctor(TheInvaders.Inventory.Resource.TYPE,Biome.TYPE)
  commentId: M:TheInvaders.Inventory.Resource.#ctor(TheInvaders.Inventory.Resource.TYPE,Biome.TYPE)
  id: '#ctor(TheInvaders.Inventory.Resource.TYPE,Biome.TYPE)'
  parent: TheInvaders.Inventory.Resource
  langs:
  - csharp
  - vb
  name: Resource(Resource.TYPE, Biome.TYPE)
  nameWithType: Resource.Resource(Resource.TYPE, Biome.TYPE)
  fullName: TheInvaders.Inventory.Resource.Resource(TheInvaders.Inventory.Resource.TYPE, Biome.TYPE)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3899
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders.Inventory
  syntax:
    content: public Resource(Resource.TYPE _type, Biome.TYPE _biome)
    parameters:
    - id: _type
      type: TheInvaders.Inventory.Resource.TYPE
    - id: _biome
      type: Biome.TYPE
    content.vb: Public Sub New(_type As Resource.TYPE, _biome As Biome.TYPE)
  overload: TheInvaders.Inventory.Resource.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TheInvaders.Inventory
  commentId: N:TheInvaders.Inventory
  name: TheInvaders.Inventory
  nameWithType: TheInvaders.Inventory
  fullName: TheInvaders.Inventory
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TheInvaders.Inventory.Item
  commentId: T:TheInvaders.Inventory.Item
  parent: TheInvaders.Inventory
  name: Item
  nameWithType: Item
  fullName: TheInvaders.Inventory.Item
- uid: TheInvaders.Inventory.IItem
  commentId: T:TheInvaders.Inventory.IItem
  parent: TheInvaders.Inventory
  name: IItem
  nameWithType: IItem
  fullName: TheInvaders.Inventory.IItem
- uid: TheInvaders.Inventory.Item.Name
  commentId: P:TheInvaders.Inventory.Item.Name
  parent: TheInvaders.Inventory.Item
  name: Name
  nameWithType: Item.Name
  fullName: TheInvaders.Inventory.Item.Name
- uid: TheInvaders.Inventory.Item.Icon
  commentId: P:TheInvaders.Inventory.Item.Icon
  parent: TheInvaders.Inventory.Item
  name: Icon
  nameWithType: Item.Icon
  fullName: TheInvaders.Inventory.Item.Icon
- uid: TheInvaders.Inventory.Item.Count
  commentId: P:TheInvaders.Inventory.Item.Count
  parent: TheInvaders.Inventory.Item
  name: Count
  nameWithType: Item.Count
  fullName: TheInvaders.Inventory.Item.Count
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: List{TheInvaders.Inventory.Resource}
  commentId: '!:List{TheInvaders.Inventory.Resource}'
  definition: List`1
  name: List<Resource>
  nameWithType: List<Resource>
  fullName: List<TheInvaders.Inventory.Resource>
  nameWithType.vb: List(Of Resource)
  fullName.vb: List(Of TheInvaders.Inventory.Resource)
  name.vb: List(Of Resource)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: TheInvaders.Inventory.Resource
    name: Resource
    nameWithType: Resource
    fullName: TheInvaders.Inventory.Resource
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: TheInvaders.Inventory.Resource
    name: Resource
    nameWithType: Resource
    fullName: TheInvaders.Inventory.Resource
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: TheInvaders.Inventory.Resource.Type*
  commentId: Overload:TheInvaders.Inventory.Resource.Type
  name: Type
  nameWithType: Resource.Type
  fullName: TheInvaders.Inventory.Resource.Type
- uid: TheInvaders.Inventory.Resource.TYPE
  commentId: T:TheInvaders.Inventory.Resource.TYPE
  parent: TheInvaders.Inventory
  name: Resource.TYPE
  nameWithType: Resource.TYPE
  fullName: TheInvaders.Inventory.Resource.TYPE
- uid: TheInvaders.Inventory.Resource.Loc*
  commentId: Overload:TheInvaders.Inventory.Resource.Loc
  name: Loc
  nameWithType: Resource.Loc
  fullName: TheInvaders.Inventory.Resource.Loc
- uid: Biome.TYPE
  isExternal: true
  name: Biome.TYPE
  nameWithType: Biome.TYPE
  fullName: Biome.TYPE
- uid: TheInvaders.Inventory.Resource.#ctor*
  commentId: Overload:TheInvaders.Inventory.Resource.#ctor
  name: Resource
  nameWithType: Resource.Resource
  fullName: TheInvaders.Inventory.Resource.Resource
- uid: TheInvaders.Inventory.Resource
  commentId: T:TheInvaders.Inventory.Resource
  parent: TheInvaders.Inventory
  name: Resource
  nameWithType: Resource
  fullName: TheInvaders.Inventory.Resource
