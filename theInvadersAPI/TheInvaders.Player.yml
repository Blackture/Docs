### YamlMime:ManagedReference
items:
- uid: TheInvaders.Player
  commentId: T:TheInvaders.Player
  id: Player
  parent: TheInvaders
  children:
  - TheInvaders.Player.#ctor(System.String,System.Single,System.Single,System.Single)
  - TheInvaders.Player.#ctor(TheInvaders.Player)
  - TheInvaders.Player.inventory
  - TheInvaders.Player.PlayerName
  langs:
  - csharp
  - vb
  name: Player
  nameWithType: Player
  fullName: TheInvaders.Player
  type: Class
  source:
    id: Player
    path: ''
    startLine: 2910
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  summary: "\nThe <xref href=\"TheInvaders.Player\" data-throw-if-not-resolved=\"false\"></xref> is derived by the <xref href=\"TheInvaders.Character\" data-throw-if-not-resolved=\"false\"></xref>.\nIts additions are the <xref href=\"TheInvaders.Player.inventory\" data-throw-if-not-resolved=\"false\"></xref> and the <xref href=\"TheInvaders.Player.PlayerName\" data-throw-if-not-resolved=\"false\"></xref>.\n<ol><li>DEPlayer</li><li>ENPlayer</li><li>ENDE</li></ol>\n"
  example: []
  syntax:
    content: 'public class Player : Character'
    content.vb: >-
      Public Class Player
          Inherits Character
  inheritance:
  - System.Object
  - TheInvaders.Character
  inheritedMembers:
  - TheInvaders.Character.armor
  - TheInvaders.Character.health
  - TheInvaders.Character.maxMoveDistance
  - TheInvaders.Character.Armor
  - TheInvaders.Character.Health
  - TheInvaders.Character.MaxMoveDistance
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: TheInvaders.Player.inventory
  commentId: F:TheInvaders.Player.inventory
  id: inventory
  parent: TheInvaders.Player
  langs:
  - csharp
  - vb
  name: inventory
  nameWithType: Player.inventory
  fullName: TheInvaders.Player.inventory
  type: Field
  source:
    id: inventory
    path: ''
    startLine: 2912
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public List<IItem> inventory
    return:
      type: List{IItem}
    content.vb: Public inventory As List(Of IItem)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TheInvaders.Player.PlayerName
  commentId: P:TheInvaders.Player.PlayerName
  id: PlayerName
  parent: TheInvaders.Player
  langs:
  - csharp
  - vb
  name: PlayerName
  nameWithType: Player.PlayerName
  fullName: TheInvaders.Player.PlayerName
  type: Property
  source:
    id: PlayerName
    path: ''
    startLine: 2915
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public string PlayerName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property PlayerName As String
  overload: TheInvaders.Player.PlayerName*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: TheInvaders.Player.#ctor(System.String,System.Single,System.Single,System.Single)
  commentId: M:TheInvaders.Player.#ctor(System.String,System.Single,System.Single,System.Single)
  id: '#ctor(System.String,System.Single,System.Single,System.Single)'
  parent: TheInvaders.Player
  langs:
  - csharp
  - vb
  name: Player(String, Single, Single, Single)
  nameWithType: Player.Player(String, Single, Single, Single)
  fullName: TheInvaders.Player.Player(System.String, System.Single, System.Single, System.Single)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2917
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public Player(string _playerName, float _armor, float _health, float _maxMoveDistance)
    parameters:
    - id: _playerName
      type: System.String
    - id: _armor
      type: System.Single
    - id: _health
      type: System.Single
    - id: _maxMoveDistance
      type: System.Single
    content.vb: Public Sub New(_playerName As String, _armor As Single, _health As Single, _maxMoveDistance As Single)
  overload: TheInvaders.Player.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: TheInvaders.Player.#ctor(TheInvaders.Player)
  commentId: M:TheInvaders.Player.#ctor(TheInvaders.Player)
  id: '#ctor(TheInvaders.Player)'
  parent: TheInvaders.Player
  langs:
  - csharp
  - vb
  name: Player(Player)
  nameWithType: Player.Player(Player)
  fullName: TheInvaders.Player.Player(TheInvaders.Player)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2923
  assemblies:
  - cs.temp.dll
  namespace: TheInvaders
  syntax:
    content: public Player(Player p)
    parameters:
    - id: p
      type: TheInvaders.Player
    content.vb: Public Sub New(p As Player)
  overload: TheInvaders.Player.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: TheInvaders.Player
  commentId: T:TheInvaders.Player
  parent: TheInvaders
  name: Player
  nameWithType: Player
  fullName: TheInvaders.Player
- uid: TheInvaders.Character
  commentId: T:TheInvaders.Character
  parent: TheInvaders
  name: Character
  nameWithType: Character
  fullName: TheInvaders.Character
- uid: TheInvaders.Player.inventory
  commentId: F:TheInvaders.Player.inventory
  isExternal: true
- uid: TheInvaders.Player.PlayerName
  commentId: P:TheInvaders.Player.PlayerName
  isExternal: true
- uid: TheInvaders
  commentId: N:TheInvaders
  name: TheInvaders
  nameWithType: TheInvaders
  fullName: TheInvaders
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: TheInvaders.Character.armor
  commentId: F:TheInvaders.Character.armor
  parent: TheInvaders.Character
  name: armor
  nameWithType: Character.armor
  fullName: TheInvaders.Character.armor
- uid: TheInvaders.Character.health
  commentId: F:TheInvaders.Character.health
  parent: TheInvaders.Character
  name: health
  nameWithType: Character.health
  fullName: TheInvaders.Character.health
- uid: TheInvaders.Character.maxMoveDistance
  commentId: F:TheInvaders.Character.maxMoveDistance
  parent: TheInvaders.Character
  name: maxMoveDistance
  nameWithType: Character.maxMoveDistance
  fullName: TheInvaders.Character.maxMoveDistance
- uid: TheInvaders.Character.Armor
  commentId: P:TheInvaders.Character.Armor
  parent: TheInvaders.Character
  name: Armor
  nameWithType: Character.Armor
  fullName: TheInvaders.Character.Armor
- uid: TheInvaders.Character.Health
  commentId: P:TheInvaders.Character.Health
  parent: TheInvaders.Character
  name: Health
  nameWithType: Character.Health
  fullName: TheInvaders.Character.Health
- uid: TheInvaders.Character.MaxMoveDistance
  commentId: P:TheInvaders.Character.MaxMoveDistance
  parent: TheInvaders.Character
  name: MaxMoveDistance
  nameWithType: Character.MaxMoveDistance
  fullName: TheInvaders.Character.MaxMoveDistance
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: List{IItem}
  commentId: '!:List{IItem}'
  definition: List`1
  name: List<IItem>
  nameWithType: List<IItem>
  fullName: List<IItem>
  nameWithType.vb: List(Of IItem)
  fullName.vb: List(Of IItem)
  name.vb: List(Of IItem)
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: IItem
    name: IItem
    nameWithType: IItem
    fullName: IItem
    isExternal: true
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: IItem
    name: IItem
    nameWithType: IItem
    fullName: IItem
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: List`1
  isExternal: true
  name: List<>
  nameWithType: List<>
  fullName: List<>
  nameWithType.vb: List(Of )
  fullName.vb: List(Of )
  name.vb: List(Of )
  spec.csharp:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: List`1
    name: List
    nameWithType: List
    fullName: List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: ''
    nameWithType: ''
    fullName: ''
  - name: )
    nameWithType: )
    fullName: )
- uid: TheInvaders.Player.PlayerName*
  commentId: Overload:TheInvaders.Player.PlayerName
  name: PlayerName
  nameWithType: Player.PlayerName
  fullName: TheInvaders.Player.PlayerName
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: TheInvaders.Player.#ctor*
  commentId: Overload:TheInvaders.Player.#ctor
  name: Player
  nameWithType: Player.Player
  fullName: TheInvaders.Player.Player
- uid: System.Single
  commentId: T:System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
