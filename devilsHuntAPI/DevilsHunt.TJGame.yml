### YamlMime:ManagedReference
items:
- uid: DevilsHunt.TJGame
  commentId: T:DevilsHunt.TJGame
  id: TJGame
  parent: DevilsHunt
  children:
  - DevilsHunt.TJGame.#ctor(DevilsHunt.TJGame,Button[],Button,InputField[],GameObject,GameObject,GameObject,GameObject,GameObject,GameObject,GameObject,System.Boolean)
  - DevilsHunt.TJGame.#ctor(System.Boolean[],System.String[],Button[],InputField[],Button,GameObject,GameObject,GameObject,GameObject,GameObject,GameObject,GameObject)
  - DevilsHunt.TJGame.EasyDevils
  - DevilsHunt.TJGame.ExclamationMarks
  - DevilsHunt.TJGame.HardDevils
  - DevilsHunt.TJGame.LastTurn
  - DevilsHunt.TJGame.NextTurn
  - DevilsHunt.TJGame.NextTurn(System.Boolean,System.Boolean)
  - DevilsHunt.TJGame.OpenInventory
  - DevilsHunt.TJGame.OpenPlayerFile(System.Int32,System.Boolean)
  - DevilsHunt.TJGame.OpenSecondarySkill
  - DevilsHunt.TJGame.OpenShop
  - DevilsHunt.TJGame.PhotoCards
  - DevilsHunt.TJGame.Players
  - DevilsHunt.TJGame.Shop
  - DevilsHunt.TJGame.Turn
  langs:
  - csharp
  - vb
  name: TJGame
  nameWithType: TJGame
  fullName: DevilsHunt.TJGame
  type: Class
  source:
    id: TJGame
    path: ''
    startLine: 2941
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: >-
      [Serializable]

      public class TJGame
    content.vb: >-
      <Serializable>

      Public Class TJGame
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  attributes:
  - type: System.SerializableAttribute
    ctor: System.SerializableAttribute.#ctor
    arguments: []
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DevilsHunt.TJGame.Players
  commentId: P:DevilsHunt.TJGame.Players
  id: Players
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: Players
  nameWithType: TJGame.Players
  fullName: DevilsHunt.TJGame.Players
  type: Property
  source:
    id: Players
    path: ''
    startLine: 2955
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public Player[] Players { get; }
    parameters: []
    return:
      type: DevilsHunt.Player[]
    content.vb: Public ReadOnly Property Players As Player()
  overload: DevilsHunt.TJGame.Players*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DevilsHunt.TJGame.EasyDevils
  commentId: P:DevilsHunt.TJGame.EasyDevils
  id: EasyDevils
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: EasyDevils
  nameWithType: TJGame.EasyDevils
  fullName: DevilsHunt.TJGame.EasyDevils
  type: Property
  source:
    id: EasyDevils
    path: ''
    startLine: 2964
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public List<Devil> EasyDevils { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{DevilsHunt.Devil}
    content.vb: Public Property EasyDevils As List(Of Devil)
  overload: DevilsHunt.TJGame.EasyDevils*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DevilsHunt.TJGame.HardDevils
  commentId: P:DevilsHunt.TJGame.HardDevils
  id: HardDevils
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: HardDevils
  nameWithType: TJGame.HardDevils
  fullName: DevilsHunt.TJGame.HardDevils
  type: Property
  source:
    id: HardDevils
    path: ''
    startLine: 2973
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public List<Devil> HardDevils { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{DevilsHunt.Devil}
    content.vb: Public Property HardDevils As List(Of Devil)
  overload: DevilsHunt.TJGame.HardDevils*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DevilsHunt.TJGame.ExclamationMarks
  commentId: P:DevilsHunt.TJGame.ExclamationMarks
  id: ExclamationMarks
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: ExclamationMarks
  nameWithType: TJGame.ExclamationMarks
  fullName: DevilsHunt.TJGame.ExclamationMarks
  type: Property
  source:
    id: ExclamationMarks
    path: ''
    startLine: 2984
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public List<ExclamationMarks> ExclamationMarks { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{DevilsHunt.ExclamationMarks}
    content.vb: Public Property ExclamationMarks As List(Of ExclamationMarks)
  overload: DevilsHunt.TJGame.ExclamationMarks*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DevilsHunt.TJGame.PhotoCards
  commentId: P:DevilsHunt.TJGame.PhotoCards
  id: PhotoCards
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: PhotoCards
  nameWithType: TJGame.PhotoCards
  fullName: DevilsHunt.TJGame.PhotoCards
  type: Property
  source:
    id: PhotoCards
    path: ''
    startLine: 2995
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public List<PhotoCard> PhotoCards { get; set; }
    parameters: []
    return:
      type: System.Collections.Generic.List{DevilsHunt.PhotoCard}
    content.vb: Public Property PhotoCards As List(Of PhotoCard)
  overload: DevilsHunt.TJGame.PhotoCards*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DevilsHunt.TJGame.Shop
  commentId: P:DevilsHunt.TJGame.Shop
  id: Shop
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: Shop
  nameWithType: TJGame.Shop
  fullName: DevilsHunt.TJGame.Shop
  type: Property
  source:
    id: Shop
    path: ''
    startLine: 3006
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public Shop Shop { get; set; }
    parameters: []
    return:
      type: DevilsHunt.Shop
    content.vb: Public Property Shop As Shop
  overload: DevilsHunt.TJGame.Shop*
  modifiers.csharp:
  - public
  - get
  - set
  modifiers.vb:
  - Public
- uid: DevilsHunt.TJGame.Turn
  commentId: P:DevilsHunt.TJGame.Turn
  id: Turn
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: Turn
  nameWithType: TJGame.Turn
  fullName: DevilsHunt.TJGame.Turn
  type: Property
  source:
    id: Turn
    path: ''
    startLine: 3017
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public int Turn { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property Turn As Integer
  overload: DevilsHunt.TJGame.Turn*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DevilsHunt.TJGame.LastTurn
  commentId: P:DevilsHunt.TJGame.LastTurn
  id: LastTurn
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: LastTurn
  nameWithType: TJGame.LastTurn
  fullName: DevilsHunt.TJGame.LastTurn
  type: Property
  source:
    id: LastTurn
    path: ''
    startLine: 3023
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public int LastTurn { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property LastTurn As Integer
  overload: DevilsHunt.TJGame.LastTurn*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DevilsHunt.TJGame.#ctor(System.Boolean[],System.String[],Button[],InputField[],Button,GameObject,GameObject,GameObject,GameObject,GameObject,GameObject,GameObject)
  commentId: M:DevilsHunt.TJGame.#ctor(System.Boolean[],System.String[],Button[],InputField[],Button,GameObject,GameObject,GameObject,GameObject,GameObject,GameObject,GameObject)
  id: '#ctor(System.Boolean[],System.String[],Button[],InputField[],Button,GameObject,GameObject,GameObject,GameObject,GameObject,GameObject,GameObject)'
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: TJGame(Boolean[], String[], Button[], InputField[], Button, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject)
  nameWithType: TJGame.TJGame(Boolean[], String[], Button[], InputField[], Button, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject)
  fullName: DevilsHunt.TJGame.TJGame(System.Boolean[], System.String[], Button[], InputField[], Button, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3036
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public TJGame(bool[] active_players, string[] playerNames, Button[] btns, InputField[] iName, Button nextBtn, GameObject fileObject, GameObject shopObject, GameObject secondarySkillsObject, GameObject NewTurn, GameObject main, GameObject itemPrefab, GameObject inventory)
    parameters:
    - id: active_players
      type: System.Boolean[]
    - id: playerNames
      type: System.String[]
    - id: btns
      type: Button[]
    - id: iName
      type: InputField[]
    - id: nextBtn
      type: Button
    - id: fileObject
      type: GameObject
    - id: shopObject
      type: GameObject
    - id: secondarySkillsObject
      type: GameObject
    - id: NewTurn
      type: GameObject
    - id: main
      type: GameObject
    - id: itemPrefab
      type: GameObject
    - id: inventory
      type: GameObject
    content.vb: Public Sub New(active_players As Boolean(), playerNames As String(), btns As Button(), iName As InputField(), nextBtn As Button, fileObject As GameObject, shopObject As GameObject, secondarySkillsObject As GameObject, NewTurn As GameObject, main As GameObject, itemPrefab As GameObject, inventory As GameObject)
  overload: DevilsHunt.TJGame.#ctor*
  nameWithType.vb: TJGame.TJGame(Boolean(), String(), Button(), InputField(), Button, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DevilsHunt.TJGame.TJGame(System.Boolean(), System.String(), Button(), InputField(), Button, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject)
  name.vb: TJGame(Boolean(), String(), Button(), InputField(), Button, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject)
- uid: DevilsHunt.TJGame.#ctor(DevilsHunt.TJGame,Button[],Button,InputField[],GameObject,GameObject,GameObject,GameObject,GameObject,GameObject,GameObject,System.Boolean)
  commentId: M:DevilsHunt.TJGame.#ctor(DevilsHunt.TJGame,Button[],Button,InputField[],GameObject,GameObject,GameObject,GameObject,GameObject,GameObject,GameObject,System.Boolean)
  id: '#ctor(DevilsHunt.TJGame,Button[],Button,InputField[],GameObject,GameObject,GameObject,GameObject,GameObject,GameObject,GameObject,System.Boolean)'
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: TJGame(TJGame, Button[], Button, InputField[], GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, Boolean)
  nameWithType: TJGame.TJGame(TJGame, Button[], Button, InputField[], GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, Boolean)
  fullName: DevilsHunt.TJGame.TJGame(DevilsHunt.TJGame, Button[], Button, InputField[], GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 3100
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public TJGame(TJGame load, Button[] btns, Button nextBtn, InputField[] iName, GameObject fileObject, GameObject shopObject, GameObject secondarySkillsObject, GameObject NewTurn, GameObject main, GameObject itemPrefab, GameObject inventory, bool hasMoved)
    parameters:
    - id: load
      type: DevilsHunt.TJGame
    - id: btns
      type: Button[]
    - id: nextBtn
      type: Button
    - id: iName
      type: InputField[]
    - id: fileObject
      type: GameObject
    - id: shopObject
      type: GameObject
    - id: secondarySkillsObject
      type: GameObject
    - id: NewTurn
      type: GameObject
    - id: main
      type: GameObject
    - id: itemPrefab
      type: GameObject
    - id: inventory
      type: GameObject
    - id: hasMoved
      type: System.Boolean
    content.vb: Public Sub New(load As TJGame, btns As Button(), nextBtn As Button, iName As InputField(), fileObject As GameObject, shopObject As GameObject, secondarySkillsObject As GameObject, NewTurn As GameObject, main As GameObject, itemPrefab As GameObject, inventory As GameObject, hasMoved As Boolean)
  overload: DevilsHunt.TJGame.#ctor*
  nameWithType.vb: TJGame.TJGame(TJGame, Button(), Button, InputField(), GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, Boolean)
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
  fullName.vb: DevilsHunt.TJGame.TJGame(DevilsHunt.TJGame, Button(), Button, InputField(), GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, System.Boolean)
  name.vb: TJGame(TJGame, Button(), Button, InputField(), GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, GameObject, Boolean)
- uid: DevilsHunt.TJGame.OpenPlayerFile(System.Int32,System.Boolean)
  commentId: M:DevilsHunt.TJGame.OpenPlayerFile(System.Int32,System.Boolean)
  id: OpenPlayerFile(System.Int32,System.Boolean)
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: OpenPlayerFile(Int32, Boolean)
  nameWithType: TJGame.OpenPlayerFile(Int32, Boolean)
  fullName: DevilsHunt.TJGame.OpenPlayerFile(System.Int32, System.Boolean)
  type: Method
  source:
    id: OpenPlayerFile
    path: ''
    startLine: 3167
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public void OpenPlayerFile(int playerIndex, bool shopable)
    parameters:
    - id: playerIndex
      type: System.Int32
    - id: shopable
      type: System.Boolean
    content.vb: Public Sub OpenPlayerFile(playerIndex As Integer, shopable As Boolean)
  overload: DevilsHunt.TJGame.OpenPlayerFile*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DevilsHunt.TJGame.OpenSecondarySkill
  commentId: M:DevilsHunt.TJGame.OpenSecondarySkill
  id: OpenSecondarySkill
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: OpenSecondarySkill()
  nameWithType: TJGame.OpenSecondarySkill()
  fullName: DevilsHunt.TJGame.OpenSecondarySkill()
  type: Method
  source:
    id: OpenSecondarySkill
    path: ''
    startLine: 3216
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public void OpenSecondarySkill()
    content.vb: Public Sub OpenSecondarySkill
  overload: DevilsHunt.TJGame.OpenSecondarySkill*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DevilsHunt.TJGame.OpenShop
  commentId: M:DevilsHunt.TJGame.OpenShop
  id: OpenShop
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: OpenShop()
  nameWithType: TJGame.OpenShop()
  fullName: DevilsHunt.TJGame.OpenShop()
  type: Method
  source:
    id: OpenShop
    path: ''
    startLine: 3222
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public void OpenShop()
    content.vb: Public Sub OpenShop
  overload: DevilsHunt.TJGame.OpenShop*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DevilsHunt.TJGame.OpenInventory
  commentId: M:DevilsHunt.TJGame.OpenInventory
  id: OpenInventory
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: OpenInventory()
  nameWithType: TJGame.OpenInventory()
  fullName: DevilsHunt.TJGame.OpenInventory()
  type: Method
  source:
    id: OpenInventory
    path: ''
    startLine: 3228
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public void OpenInventory()
    content.vb: Public Sub OpenInventory
  overload: DevilsHunt.TJGame.OpenInventory*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DevilsHunt.TJGame.NextTurn
  commentId: M:DevilsHunt.TJGame.NextTurn
  id: NextTurn
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: NextTurn()
  nameWithType: TJGame.NextTurn()
  fullName: DevilsHunt.TJGame.NextTurn()
  type: Method
  source:
    id: NextTurn
    path: ''
    startLine: 3235
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public void NextTurn()
    content.vb: Public Sub NextTurn
  overload: DevilsHunt.TJGame.NextTurn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DevilsHunt.TJGame.NextTurn(System.Boolean,System.Boolean)
  commentId: M:DevilsHunt.TJGame.NextTurn(System.Boolean,System.Boolean)
  id: NextTurn(System.Boolean,System.Boolean)
  parent: DevilsHunt.TJGame
  langs:
  - csharp
  - vb
  name: NextTurn(Boolean, Boolean)
  nameWithType: TJGame.NextTurn(Boolean, Boolean)
  fullName: DevilsHunt.TJGame.NextTurn(System.Boolean, System.Boolean)
  type: Method
  source:
    id: NextTurn
    path: ''
    startLine: 3272
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public void NextTurn(bool withSkills, bool withoutPopup)
    parameters:
    - id: withSkills
      type: System.Boolean
    - id: withoutPopup
      type: System.Boolean
    content.vb: Public Sub NextTurn(withSkills As Boolean, withoutPopup As Boolean)
  overload: DevilsHunt.TJGame.NextTurn*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DevilsHunt
  commentId: N:DevilsHunt
  name: DevilsHunt
  nameWithType: DevilsHunt
  fullName: DevilsHunt
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DevilsHunt.TJGame.Players*
  commentId: Overload:DevilsHunt.TJGame.Players
  name: Players
  nameWithType: TJGame.Players
  fullName: DevilsHunt.TJGame.Players
- uid: DevilsHunt.Player[]
  isExternal: true
  name: Player[]
  nameWithType: Player[]
  fullName: DevilsHunt.Player[]
  nameWithType.vb: Player()
  fullName.vb: DevilsHunt.Player()
  name.vb: Player()
  spec.csharp:
  - uid: DevilsHunt.Player
    name: Player
    nameWithType: Player
    fullName: DevilsHunt.Player
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: DevilsHunt.Player
    name: Player
    nameWithType: Player
    fullName: DevilsHunt.Player
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: DevilsHunt.TJGame.EasyDevils*
  commentId: Overload:DevilsHunt.TJGame.EasyDevils
  name: EasyDevils
  nameWithType: TJGame.EasyDevils
  fullName: DevilsHunt.TJGame.EasyDevils
- uid: System.Collections.Generic.List{DevilsHunt.Devil}
  commentId: T:System.Collections.Generic.List{DevilsHunt.Devil}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Devil>
  nameWithType: List<Devil>
  fullName: System.Collections.Generic.List<DevilsHunt.Devil>
  nameWithType.vb: List(Of Devil)
  fullName.vb: System.Collections.Generic.List(Of DevilsHunt.Devil)
  name.vb: List(Of Devil)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DevilsHunt.Devil
    name: Devil
    nameWithType: Devil
    fullName: DevilsHunt.Devil
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DevilsHunt.Devil
    name: Devil
    nameWithType: Devil
    fullName: DevilsHunt.Devil
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DevilsHunt.TJGame.HardDevils*
  commentId: Overload:DevilsHunt.TJGame.HardDevils
  name: HardDevils
  nameWithType: TJGame.HardDevils
  fullName: DevilsHunt.TJGame.HardDevils
- uid: DevilsHunt.TJGame.ExclamationMarks*
  commentId: Overload:DevilsHunt.TJGame.ExclamationMarks
  name: ExclamationMarks
  nameWithType: TJGame.ExclamationMarks
  fullName: DevilsHunt.TJGame.ExclamationMarks
- uid: System.Collections.Generic.List{DevilsHunt.ExclamationMarks}
  commentId: T:System.Collections.Generic.List{DevilsHunt.ExclamationMarks}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<ExclamationMarks>
  nameWithType: List<ExclamationMarks>
  fullName: System.Collections.Generic.List<DevilsHunt.ExclamationMarks>
  nameWithType.vb: List(Of ExclamationMarks)
  fullName.vb: System.Collections.Generic.List(Of DevilsHunt.ExclamationMarks)
  name.vb: List(Of ExclamationMarks)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DevilsHunt.ExclamationMarks
    name: ExclamationMarks
    nameWithType: ExclamationMarks
    fullName: DevilsHunt.ExclamationMarks
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DevilsHunt.ExclamationMarks
    name: ExclamationMarks
    nameWithType: ExclamationMarks
    fullName: DevilsHunt.ExclamationMarks
  - name: )
    nameWithType: )
    fullName: )
- uid: DevilsHunt.TJGame.PhotoCards*
  commentId: Overload:DevilsHunt.TJGame.PhotoCards
  name: PhotoCards
  nameWithType: TJGame.PhotoCards
  fullName: DevilsHunt.TJGame.PhotoCards
- uid: System.Collections.Generic.List{DevilsHunt.PhotoCard}
  commentId: T:System.Collections.Generic.List{DevilsHunt.PhotoCard}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<PhotoCard>
  nameWithType: List<PhotoCard>
  fullName: System.Collections.Generic.List<DevilsHunt.PhotoCard>
  nameWithType.vb: List(Of PhotoCard)
  fullName.vb: System.Collections.Generic.List(Of DevilsHunt.PhotoCard)
  name.vb: List(Of PhotoCard)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DevilsHunt.PhotoCard
    name: PhotoCard
    nameWithType: PhotoCard
    fullName: DevilsHunt.PhotoCard
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DevilsHunt.PhotoCard
    name: PhotoCard
    nameWithType: PhotoCard
    fullName: DevilsHunt.PhotoCard
  - name: )
    nameWithType: )
    fullName: )
- uid: DevilsHunt.TJGame.Shop*
  commentId: Overload:DevilsHunt.TJGame.Shop
  name: Shop
  nameWithType: TJGame.Shop
  fullName: DevilsHunt.TJGame.Shop
- uid: DevilsHunt.Shop
  commentId: T:DevilsHunt.Shop
  parent: DevilsHunt
  name: Shop
  nameWithType: Shop
  fullName: DevilsHunt.Shop
- uid: DevilsHunt.TJGame.Turn*
  commentId: Overload:DevilsHunt.TJGame.Turn
  name: Turn
  nameWithType: TJGame.Turn
  fullName: DevilsHunt.TJGame.Turn
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: DevilsHunt.TJGame.LastTurn*
  commentId: Overload:DevilsHunt.TJGame.LastTurn
  name: LastTurn
  nameWithType: TJGame.LastTurn
  fullName: DevilsHunt.TJGame.LastTurn
- uid: DevilsHunt.TJGame.#ctor*
  commentId: Overload:DevilsHunt.TJGame.#ctor
  name: TJGame
  nameWithType: TJGame.TJGame
  fullName: DevilsHunt.TJGame.TJGame
- uid: System.Boolean[]
  isExternal: true
  name: Boolean[]
  nameWithType: Boolean[]
  fullName: System.Boolean[]
  nameWithType.vb: Boolean()
  fullName.vb: System.Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: System.Boolean
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: System.String[]
  isExternal: true
  name: String[]
  nameWithType: String[]
  fullName: System.String[]
  nameWithType.vb: String()
  fullName.vb: System.String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: System.String
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Button[]
  isExternal: true
  name: Button[]
  nameWithType: Button[]
  fullName: Button[]
  nameWithType.vb: Button()
  fullName.vb: Button()
  name.vb: Button()
  spec.csharp:
  - uid: Button
    name: Button
    nameWithType: Button
    fullName: Button
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: Button
    name: Button
    nameWithType: Button
    fullName: Button
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: InputField[]
  isExternal: true
  name: InputField[]
  nameWithType: InputField[]
  fullName: InputField[]
  nameWithType.vb: InputField()
  fullName.vb: InputField()
  name.vb: InputField()
  spec.csharp:
  - uid: InputField
    name: InputField
    nameWithType: InputField
    fullName: InputField
    isExternal: true
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
  spec.vb:
  - uid: InputField
    name: InputField
    nameWithType: InputField
    fullName: InputField
    isExternal: true
  - name: ()
    nameWithType: ()
    fullName: ()
- uid: Button
  isExternal: true
  name: Button
  nameWithType: Button
  fullName: Button
- uid: GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: DevilsHunt.TJGame
  commentId: T:DevilsHunt.TJGame
  parent: DevilsHunt
  name: TJGame
  nameWithType: TJGame
  fullName: DevilsHunt.TJGame
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DevilsHunt.TJGame.OpenPlayerFile*
  commentId: Overload:DevilsHunt.TJGame.OpenPlayerFile
  name: OpenPlayerFile
  nameWithType: TJGame.OpenPlayerFile
  fullName: DevilsHunt.TJGame.OpenPlayerFile
- uid: DevilsHunt.TJGame.OpenSecondarySkill*
  commentId: Overload:DevilsHunt.TJGame.OpenSecondarySkill
  name: OpenSecondarySkill
  nameWithType: TJGame.OpenSecondarySkill
  fullName: DevilsHunt.TJGame.OpenSecondarySkill
- uid: DevilsHunt.TJGame.OpenShop*
  commentId: Overload:DevilsHunt.TJGame.OpenShop
  name: OpenShop
  nameWithType: TJGame.OpenShop
  fullName: DevilsHunt.TJGame.OpenShop
- uid: DevilsHunt.TJGame.OpenInventory*
  commentId: Overload:DevilsHunt.TJGame.OpenInventory
  name: OpenInventory
  nameWithType: TJGame.OpenInventory
  fullName: DevilsHunt.TJGame.OpenInventory
- uid: DevilsHunt.TJGame.NextTurn*
  commentId: Overload:DevilsHunt.TJGame.NextTurn
  name: NextTurn
  nameWithType: TJGame.NextTurn
  fullName: DevilsHunt.TJGame.NextTurn
