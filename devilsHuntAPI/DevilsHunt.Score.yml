### YamlMime:ManagedReference
items:
- uid: DevilsHunt.Score
  commentId: T:DevilsHunt.Score
  id: Score
  parent: DevilsHunt
  children:
  - DevilsHunt.Score.#ctor(System.String,DevilsHunt.TJGame,GameObject,DateTime,System.String,System.Boolean)
  - DevilsHunt.Score.#ctor(System.String,DevilsHunt.TJGame,GameObject,System.Boolean)
  - DevilsHunt.Score.Date
  - DevilsHunt.Score.Delete
  - DevilsHunt.Score.GetFile
  - DevilsHunt.Score.GetScores
  - DevilsHunt.Score.Load
  - DevilsHunt.Score.main
  - DevilsHunt.Score.Name
  - DevilsHunt.Score.Save
  langs:
  - csharp
  - vb
  name: Score
  nameWithType: Score
  fullName: DevilsHunt.Score
  type: Class
  source:
    id: Score
    path: ''
    startLine: 2258
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public class Score
    content.vb: Public Class Score
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  modifiers.csharp:
  - public
  - class
  modifiers.vb:
  - Public
  - Class
- uid: DevilsHunt.Score.Date
  commentId: P:DevilsHunt.Score.Date
  id: Date
  parent: DevilsHunt.Score
  langs:
  - csharp
  - vb
  name: Date
  nameWithType: Score.Date
  fullName: DevilsHunt.Score.Date
  type: Property
  source:
    id: Date
    path: ''
    startLine: 2264
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public string Date { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Date As String
  overload: DevilsHunt.Score.Date*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DevilsHunt.Score.GetFile
  commentId: P:DevilsHunt.Score.GetFile
  id: GetFile
  parent: DevilsHunt.Score
  langs:
  - csharp
  - vb
  name: GetFile
  nameWithType: Score.GetFile
  fullName: DevilsHunt.Score.GetFile
  type: Property
  source:
    id: GetFile
    path: ''
    startLine: 2271
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public string GetFile { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property GetFile As String
  overload: DevilsHunt.Score.GetFile*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DevilsHunt.Score.main
  commentId: F:DevilsHunt.Score.main
  id: main
  parent: DevilsHunt.Score
  langs:
  - csharp
  - vb
  name: main
  nameWithType: Score.main
  fullName: DevilsHunt.Score.main
  type: Field
  source:
    id: main
    path: ''
    startLine: 2277
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public static GameObject main
    return:
      type: GameObject
    content.vb: Public Shared main As GameObject
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DevilsHunt.Score.Name
  commentId: P:DevilsHunt.Score.Name
  id: Name
  parent: DevilsHunt.Score
  langs:
  - csharp
  - vb
  name: Name
  nameWithType: Score.Name
  fullName: DevilsHunt.Score.Name
  type: Property
  source:
    id: Name
    path: ''
    startLine: 2279
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public string Name { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Name As String
  overload: DevilsHunt.Score.Name*
  modifiers.csharp:
  - public
  - get
  modifiers.vb:
  - Public
  - ReadOnly
- uid: DevilsHunt.Score.#ctor(System.String,DevilsHunt.TJGame,GameObject,System.Boolean)
  commentId: M:DevilsHunt.Score.#ctor(System.String,DevilsHunt.TJGame,GameObject,System.Boolean)
  id: '#ctor(System.String,DevilsHunt.TJGame,GameObject,System.Boolean)'
  parent: DevilsHunt.Score
  langs:
  - csharp
  - vb
  name: Score(String, TJGame, GameObject, Boolean)
  nameWithType: Score.Score(String, TJGame, GameObject, Boolean)
  fullName: DevilsHunt.Score.Score(System.String, DevilsHunt.TJGame, GameObject, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2287
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public Score(string n, TJGame game, GameObject mainObject, bool hasMoved)
    parameters:
    - id: n
      type: System.String
    - id: game
      type: DevilsHunt.TJGame
    - id: mainObject
      type: GameObject
    - id: hasMoved
      type: System.Boolean
    content.vb: Public Sub New(n As String, game As TJGame, mainObject As GameObject, hasMoved As Boolean)
  overload: DevilsHunt.Score.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DevilsHunt.Score.#ctor(System.String,DevilsHunt.TJGame,GameObject,DateTime,System.String,System.Boolean)
  commentId: M:DevilsHunt.Score.#ctor(System.String,DevilsHunt.TJGame,GameObject,DateTime,System.String,System.Boolean)
  id: '#ctor(System.String,DevilsHunt.TJGame,GameObject,DateTime,System.String,System.Boolean)'
  parent: DevilsHunt.Score
  langs:
  - csharp
  - vb
  name: Score(String, TJGame, GameObject, DateTime, String, Boolean)
  nameWithType: Score.Score(String, TJGame, GameObject, DateTime, String, Boolean)
  fullName: DevilsHunt.Score.Score(System.String, DevilsHunt.TJGame, GameObject, DateTime, System.String, System.Boolean)
  type: Constructor
  source:
    id: .ctor
    path: ''
    startLine: 2296
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public Score(string n, TJGame game, GameObject mainObject, DateTime dateTime, string f, bool hasMoved)
    parameters:
    - id: n
      type: System.String
    - id: game
      type: DevilsHunt.TJGame
    - id: mainObject
      type: GameObject
    - id: dateTime
      type: DateTime
    - id: f
      type: System.String
    - id: hasMoved
      type: System.Boolean
    content.vb: Public Sub New(n As String, game As TJGame, mainObject As GameObject, dateTime As DateTime, f As String, hasMoved As Boolean)
  overload: DevilsHunt.Score.#ctor*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DevilsHunt.Score.GetScores
  commentId: M:DevilsHunt.Score.GetScores
  id: GetScores
  parent: DevilsHunt.Score
  langs:
  - csharp
  - vb
  name: GetScores()
  nameWithType: Score.GetScores()
  fullName: DevilsHunt.Score.GetScores()
  type: Method
  source:
    id: GetScores
    path: ''
    startLine: 2306
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public static List<Score> GetScores()
    return:
      type: System.Collections.Generic.List{DevilsHunt.Score}
    content.vb: Public Shared Function GetScores As List(Of Score)
  overload: DevilsHunt.Score.GetScores*
  modifiers.csharp:
  - public
  - static
  modifiers.vb:
  - Public
  - Shared
- uid: DevilsHunt.Score.Load
  commentId: M:DevilsHunt.Score.Load
  id: Load
  parent: DevilsHunt.Score
  langs:
  - csharp
  - vb
  name: Load()
  nameWithType: Score.Load()
  fullName: DevilsHunt.Score.Load()
  type: Method
  source:
    id: Load
    path: ''
    startLine: 2341
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public void Load()
    content.vb: Public Sub Load
  overload: DevilsHunt.Score.Load*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DevilsHunt.Score.Save
  commentId: M:DevilsHunt.Score.Save
  id: Save
  parent: DevilsHunt.Score
  langs:
  - csharp
  - vb
  name: Save()
  nameWithType: Score.Save()
  fullName: DevilsHunt.Score.Save()
  type: Method
  source:
    id: Save
    path: ''
    startLine: 2369
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public void Save()
    content.vb: Public Sub Save
  overload: DevilsHunt.Score.Save*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
- uid: DevilsHunt.Score.Delete
  commentId: M:DevilsHunt.Score.Delete
  id: Delete
  parent: DevilsHunt.Score
  langs:
  - csharp
  - vb
  name: Delete()
  nameWithType: Score.Delete()
  fullName: DevilsHunt.Score.Delete()
  type: Method
  source:
    id: Delete
    path: ''
    startLine: 2399
  assemblies:
  - cs.temp.dll
  namespace: DevilsHunt
  syntax:
    content: public void Delete()
    content.vb: Public Sub Delete
  overload: DevilsHunt.Score.Delete*
  modifiers.csharp:
  - public
  modifiers.vb:
  - Public
references:
- uid: DevilsHunt
  commentId: N:DevilsHunt
  name: DevilsHunt
  nameWithType: DevilsHunt
  fullName: DevilsHunt
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  name: ToString()
  nameWithType: Object.ToString()
  fullName: System.Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    nameWithType: Object.ToString
    fullName: System.Object.ToString
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object)
  nameWithType: Object.Equals(Object)
  fullName: System.Object.Equals(System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: Equals(Object, Object)
  nameWithType: Object.Equals(Object, Object)
  fullName: System.Object.Equals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    nameWithType: Object.Equals
    fullName: System.Object.Equals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  name: ReferenceEquals(Object, Object)
  nameWithType: Object.ReferenceEquals(Object, Object)
  fullName: System.Object.ReferenceEquals(System.Object, System.Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    nameWithType: Object.ReferenceEquals
    fullName: System.Object.ReferenceEquals
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: ', '
    nameWithType: ', '
    fullName: ', '
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: System.Object
    isExternal: true
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  name: GetHashCode()
  nameWithType: Object.GetHashCode()
  fullName: System.Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    nameWithType: Object.GetHashCode
    fullName: System.Object.GetHashCode
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  name: GetType()
  nameWithType: Object.GetType()
  fullName: System.Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    nameWithType: Object.GetType
    fullName: System.Object.GetType
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  name: MemberwiseClone()
  nameWithType: Object.MemberwiseClone()
  fullName: System.Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    nameWithType: Object.MemberwiseClone
    fullName: System.Object.MemberwiseClone
    isExternal: true
  - name: (
    nameWithType: (
    fullName: (
  - name: )
    nameWithType: )
    fullName: )
- uid: System
  commentId: N:System
  isExternal: true
  name: System
  nameWithType: System
  fullName: System
- uid: DevilsHunt.Score.Date*
  commentId: Overload:DevilsHunt.Score.Date
  name: Date
  nameWithType: Score.Date
  fullName: DevilsHunt.Score.Date
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: DevilsHunt.Score.GetFile*
  commentId: Overload:DevilsHunt.Score.GetFile
  name: GetFile
  nameWithType: Score.GetFile
  fullName: DevilsHunt.Score.GetFile
- uid: GameObject
  isExternal: true
  name: GameObject
  nameWithType: GameObject
  fullName: GameObject
- uid: DevilsHunt.Score.Name*
  commentId: Overload:DevilsHunt.Score.Name
  name: Name
  nameWithType: Score.Name
  fullName: DevilsHunt.Score.Name
- uid: DevilsHunt.Score.#ctor*
  commentId: Overload:DevilsHunt.Score.#ctor
  name: Score
  nameWithType: Score.Score
  fullName: DevilsHunt.Score.Score
- uid: DevilsHunt.TJGame
  commentId: T:DevilsHunt.TJGame
  parent: DevilsHunt
  name: TJGame
  nameWithType: TJGame
  fullName: DevilsHunt.TJGame
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: DateTime
  commentId: '!:DateTime'
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: DateTime
- uid: DevilsHunt.Score.GetScores*
  commentId: Overload:DevilsHunt.Score.GetScores
  name: GetScores
  nameWithType: Score.GetScores
  fullName: DevilsHunt.Score.GetScores
- uid: System.Collections.Generic.List{DevilsHunt.Score}
  commentId: T:System.Collections.Generic.List{DevilsHunt.Score}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  name: List<Score>
  nameWithType: List<Score>
  fullName: System.Collections.Generic.List<DevilsHunt.Score>
  nameWithType.vb: List(Of Score)
  fullName.vb: System.Collections.Generic.List(Of DevilsHunt.Score)
  name.vb: List(Of Score)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - uid: DevilsHunt.Score
    name: Score
    nameWithType: Score
    fullName: DevilsHunt.Score
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - uid: DevilsHunt.Score
    name: Score
    nameWithType: Score
    fullName: DevilsHunt.Score
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: <
    nameWithType: <
    fullName: <
  - name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: System.Collections.Generic.List
    isExternal: true
  - name: '(Of '
    nameWithType: '(Of '
    fullName: '(Of '
  - name: T
    nameWithType: T
    fullName: T
  - name: )
    nameWithType: )
    fullName: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
- uid: DevilsHunt.Score.Load*
  commentId: Overload:DevilsHunt.Score.Load
  name: Load
  nameWithType: Score.Load
  fullName: DevilsHunt.Score.Load
- uid: DevilsHunt.Score.Save*
  commentId: Overload:DevilsHunt.Score.Save
  name: Save
  nameWithType: Score.Save
  fullName: DevilsHunt.Score.Save
- uid: DevilsHunt.Score.Delete*
  commentId: Overload:DevilsHunt.Score.Delete
  name: Delete
  nameWithType: Score.Delete
  fullName: DevilsHunt.Score.Delete
